{"version":3,"sources":["themes/themeLight.js","actions.js","constantas/action-types.js","constantas/data-generator-for.js","utils/data-to-CSV-preparation.js","constantas/settings.js","utils/save-in-LS.js","components/column-toggle.jsx","components/table/table-toolbar.jsx","components/switcher.jsx","utils/get-data.js","utils/sort-functions.js","utils/filters.js","components/toggle-button.jsx","components/table/table-head.jsx","components/table/row-styles.js","components/table/row-template.jsx","components/table/table-virtual.jsx","components/table/table-simple.jsx","components/table/datagrid.jsx","components/filters/styled-radio.jsx","components/filters/filters.jsx","components/app.jsx","history.js","utils/icon-generator.js","utils/data.js","utils/data-generator.js","reducer.js","middleware.js","store.js","index.jsx"],"names":["theme","createMuiTheme","palette","type","primary","main","contrastText","secondary","text","background","default","typography","fontFamily","fontSize","h1","lineHeight","fontWeight","color","margin","h2","h3","padding","h6","body1","body2","button","caption","spacing","factor","overrides","MuiCssBaseline","fontStyle","MuiInput","underline","borderBottom","responsiveFontSizes","refreshData","payload","BUSINESS_TYPES","COMPANY_STATUS","MAX_YEAR","Date","getFullYear","MIN_YEAR","HEAD_CELLS","id","label","isVisible","dataToCSVPreparation","data","config","columnConfig","newArr","forEach","index","company","url","foundedYear","founder","fundingTotal","status","geo","businessTypes","newEl","categories","reduce","accumulator","currentValue","num","n","toLocaleString","maximumFractionDigits","minimumFractionDigits","latitude","longitude","push","SETTINGS","itemHeight","amount","tolerance","minIndex","maxIndex","ROW_NUMBER","startIndex","SORT_CONFIG","orderBy","sortDirection","searchValue","searchRange","Array","length","fill","isShowOnlyOperating","statusToShow","searchByAllStr","refreshLS","configure","localStorage","removeItem","setItem","JSON","stringify","useStyles","makeStyles","columnToggler","icon","borderRadius","width","height","boxShadow","backgroundColor","backgroundImage","outline","outlineOffset","light","checkedIcon","display","content","popover","ConnectedColumnToggle","props","styles","filterConfig","React","useState","anchorEl","setAnchorEl","open","Boolean","btnId","undefined","Tooltip","title","IconButton","aria-label","className","onClick","event","currentTarget","aria-describedby","Popover","disableScrollLock","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","component","formControl","FormGroup","map","idCurrent","FormControlLabel","key","control","Checkbox","checked","onChange","newCells","item","newConfig","value","clsx","inputProps","defaultProps","ColumnToggle","connect","dispatch","rows","useToolbarStyles","root","justifyContent","alignItems","highlight","lighten","dark","description","maxWidth","paddingBottom","download","ConnectedTableToolbar","classes","selected","filteredData","handleDelete","numSelected","Toolbar","Typography","variant","tools","datas","filename","separator","TableToolbar","swicther","position","top","right","zIndex","Switcher","toggleChecked","Switch","size","labelPlacement","getData","offset","limit","initData","start","Math","max","end","min","slice","descendingComparator","a","b","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","toggleStatus","isSelected","refreshFilteredData","newData","ConnectedSimpleToggleButton","parse","getItem","ToggleButton","SimpleToggleButton","ConnectedTableHeader","rowCount","onRequestSort","scrollLeft","head","head2","textAlign","borderRight","borderTop","visuallyHidden","border","clip","overflow","checkbox","minWidth","shadows","wrap","cell","stickyColumn","left","sortLabel","opacity","renderCells","handleStatus","indeterminate","target","allSelected","property","divClass","includes","TableSortLabel","active","direction","TableHeader","rowStyles","row","checkboxChecked","center","textVerCenter","wordWrap","img","link","info","highlightedText","cellSelected","whiteBg","coordinateFormatting","ShowCoors","coors","geoClass","lat","long","ConnectedRowTemplate","isItemSelected","setIsItemSelected","useEffect","name","indexOf","labelId","selectedItems","filter","src","alt","href","rel","style","category","i","RowTemplate","ConnectedVirtualTable","virtScroller","minHeight","shownData","settings","viewportHeight","totalHeight","toleranceHeight","topPaddingHeight","bufferHeight","bufferedItems","bottomPaddingHeight","initialPosition","setInitialState","state","setState","setOrderBy","setOrder","scrollVert","setScrollVert","scrollLeftState","setScrollLeftState","viewportElement","createRef","runScroller","scrollTop","current","floor","newSelected","ref","onScroll","newOrder","sortedData","clientHeight","ceil","VirtualTable","table","empty","ConnectedSimpleTable","SimpleTable","initialData","ConnectedDataGrid","isVirtual","isVirtualChecked","setIsVirtualChecked","DataGrid","StyledRadio","Radio","flexDirection","marginBottom","marginRight","header","breakpoints","down","search","shape","marginLeft","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","fade","inputHeader","range","inputs","input","fundInput","ConnectedFilters","checkedCategories","setCheckedCategories","filteredDataAfterCheckboxes","searchAll","setSearchAll","searchedCompany","setSearchedCompany","searchedFounder","setSearchedFounder","yearsRange","setYearsRange","fundRange","setFundRange","checkedCategories1","labels","categoryMap","Map","set","handleCompanySearch","toLowerCase","handleFoundersSearch","handleSearch","handleCheckboxChange","Set","add","delete","typeIndex","handleStatusChange","yearsRangeFilter","fundRangeFilter","handleYearBlur","newRange","handleFundBlur","some","element","searchedCompany1","searchedFounder1","searchedStatus","yearsRange1","fundRange1","filtering","filters","InputBase","placeholder","Divider","FormLabel","get","RadioGroup","Slider","step","e","newValue","valueLabelDisplay","aria-labelledby","Input","Number","onBlur","Button","defaultSettings","FiltersWithoutRouter","Filters","withRouter","container","flexWrap","App","sortConfig","sortConfigJSON","ThemeProvider","CssBaseline","createBrowserHistory","draw","blockout","random","canvas","document","createElement","body","append","pokeOut","dataURI","w","colorArray","getContext","ctx","clearRect","fillStyle","fillRect","minX","maxX","randomRGB","posX","posY","startFillRed","startFillGreen","startFillBlue","y","x","h","toDataURL","remove","generator","bussinessTypes","companyStatus","minInvestSum","maxInvestSum","arr","fakerator","Fakerator","seed","masked","drawIcon","string","date","past","names","number","boolean","address","geoLocation","j","initialState","reducer","action","middleware","next","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","history","getElementById"],"mappings":"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","file":"static/js/main.ed969041.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport '@openfonts/ubuntu-condensed_cyrillic';\n\nconst ubuntuCondensed = {\n  fontFamily: 'Ubuntu Condensed',\n  fontStyle: 'normal',\n  fontWeight: '400',\n};\n// palette created with material palette generator https://material.io/inline-tools/color/\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#E8676B',\n      contrastText: '#FFFFFF',\n    },\n    secondary: {\n      main: '#bbbbbb',\n      contrastText: '#3d4451',\n    },\n    text: {\n      primary: '#3d4451',\n      secondary: '#3d4451',\n    },\n    background: {\n      default: '#FFFFFF',\n    },\n  },\n  typography: {\n    fontFamily: 'Ubuntu Condensed',\n    fontSize: 16,\n    h1: {\n      fontSize: '3.5rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 30px',\n    },\n    h2: {\n      fontSize: '2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '20px 0 20px',\n    },\n    h3: {\n      fontSize: '1.6rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      padding: '10px 0 20px',\n    },\n    h6: {\n      fontSize: '1.2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 10px',\n    },\n    body1: {\n      fontSize: '1.25rem',\n      lineHeight: '1.6',\n      color: '#000000',\n    },\n    body2: {\n      fontSize: '1rem',\n      lineHeight: '1.4',\n      color: 'rgb(61, 68, 81)',\n    },\n    button: {\n      fontSize: '1rem',\n      lineHeight: '1.4',\n      color: 'rgb(61, 68, 81)',\n    },\n    caption: {\n      fontSize: '.8rem',\n      lineHeight: '1',\n      color: 'rgb(61, 68, 81)',\n    },\n  },\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': [ubuntuCondensed],\n      },\n    },\n    MuiInput: {\n      underline: {\n        '&&&&:hover:before': {\n          borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\n        },\n      },\n    },\n  },\n});\n\nexport default responsiveFontSizes(theme);\n","import REFRESH_DATA from './constantas/action-types';\n\nconst refreshData = payload => {\n  return { type: REFRESH_DATA, payload };\n};\n\nexport default refreshData;\n","const REFRESH_DATA = 'REFRESH_DATA';\n\nexport default REFRESH_DATA;\n","export const BUSINESS_TYPES = ['Games', 'IT', 'Media', 'Medicine', 'Tourism'];\nexport const COMPANY_STATUS = ['operating', 'closed'];\nexport const MAX_YEAR = new Date().getFullYear();\nexport const MIN_YEAR = MAX_YEAR - 10;\n\nexport const MIN_INVEST_SUM = 5;\nexport const MAX_INVEST_SUM = 5000;\n\nexport const HEAD_CELLS = [\n  { id: 'index', label: '№', isVisible: true },\n  { id: 'icon', label: 'icon', isVisible: true },\n  { id: 'company', label: 'Company', isVisible: true },\n  { id: 'foundedYear', label: 'Founded in', isVisible: true },\n  { id: 'founder', label: 'Founder', isVisible: true },\n  { id: 'fundingTotal', label: 'Funding total, USD * 10^3', isVisible: true },\n  { id: 'businessTypes', label: 'Business category', isVisible: true },\n  { id: 'status', label: 'Status', isVisible: true },\n  { id: 'geo', label: 'Geo location', isVisible: true },\n];\n","import { HEAD_CELLS } from '../constantas/data-generator-for';\n\nconst dataToCSVPreparation = (data, config = { columnConfig: HEAD_CELLS }) => {\n  const newArr = [];\n  data.forEach(\n    ({\n      index,\n      id,\n      company,\n      url,\n      foundedYear,\n      founder,\n      fundingTotal,\n      status,\n      geo,\n      businessTypes,\n    }) => {\n      let newEl = { id };\n\n      if (config.columnConfig[0].isVisible) {\n        newEl = { ...newEl, index };\n      }\n      if (config.columnConfig[2].isVisible) {\n        newEl = { ...newEl, company, url };\n      }\n      if (config.columnConfig[3].isVisible) {\n        newEl = { ...newEl, foundedYear };\n      }\n      if (config.columnConfig[4].isVisible) {\n        newEl = { ...newEl, founder };\n      }\n      if (config.columnConfig[5].isVisible) {\n        newEl = { ...newEl, fundingTotal };\n      }\n      if (config.columnConfig[6].isVisible) {\n        const categories = businessTypes.reduce(\n          (accumulator, currentValue) => `${accumulator} ${currentValue},`,\n          ''\n        );\n        newEl = { ...newEl, categories };\n      }\n      if (config.columnConfig[7].isVisible) {\n        newEl = { ...newEl, status };\n      }\n      if (config.columnConfig[8].isVisible) {\n        const num = n =>\n          n.toLocaleString('ru-RU', {\n            maximumFractionDigits: 2,\n            minimumFractionDigits: 2,\n          });\n        newEl = { ...newEl, latitude: num(geo.latitude), longitude: num(geo.longitude) };\n      }\n\n      newArr.push(newEl);\n    }\n  );\n  return newArr;\n};\n\nexport default dataToCSVPreparation;\n","import {\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM,\n  MIN_YEAR,\n  MAX_YEAR,\n  BUSINESS_TYPES,\n  HEAD_CELLS,\n} from './data-generator-for';\n\nexport const ROW_NUMBER = 1100;\nexport const SETTINGS = {\n  itemHeight: 40,\n  amount: 25,\n  tolerance: 3,\n  minIndex: 0,\n  maxIndex: ROW_NUMBER - 1,\n  startIndex: 3,\n};\n\nexport const SORT_CONFIG = {\n  orderBy: 'index',\n  index: {\n    sortDirection: 'asc',\n  },\n  company: {\n    sortDirection: 'asc',\n    searchValue: '',\n  },\n  foundedYear: {\n    sortDirection: 'asc',\n    searchRange: [MIN_YEAR, MAX_YEAR],\n  },\n  founder: {\n    sortDirection: 'asc',\n    searchValue: '',\n  },\n  fundingTotal: {\n    sortDirection: 'asc',\n    searchRange: [MIN_INVEST_SUM, MAX_INVEST_SUM],\n  },\n  businessTypes: {\n    sortDirection: 'asc',\n    categories: Array(BUSINESS_TYPES.length).fill(false),\n  },\n  status: {\n    isShowOnlyOperating: false,\n    statusToShow: 'all',\n  },\n  searchByAllStr: '',\n  columnConfig: HEAD_CELLS,\n};\n\nexport const DATAGRID_SORT_CONFIG = 'DATAGRID_SORT_CONFIG';\n","import { DATAGRID_SORT_CONFIG } from '../constantas/settings';\n\nconst refreshLS = configure => {\n  localStorage.removeItem(DATAGRID_SORT_CONFIG);\n  localStorage.setItem(DATAGRID_SORT_CONFIG, JSON.stringify(configure));\n};\n\nexport default refreshLS;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Tooltip,\n  Popover,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport refreshData from '../actions';\nimport refreshLS from '../utils/save-in-LS';\n\nconst useStyles = makeStyles(theme => ({\n  columnToggler: {\n    padding: 5,\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    backgroundColor: theme.palette.background.default,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: theme.palette.primary.main,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.1), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  popover: {\n    '& .MuiPopover-paper': {\n      padding: 10,\n    },\n  },\n}));\n\nconst ConnectedColumnToggle = props => {\n  const styles = useStyles();\n  const { filterConfig, refreshData } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const btnId = open ? 'Column viewing toggle' : undefined;\n\n  const handleChange = idCurrent => () => {\n    const newCells = filterConfig.columnConfig.map(item => {\n      const { id, isVisible } = item;\n      return id === idCurrent ? { ...item, isVisible: !isVisible } : item;\n    });\n    const newConfig = { ...filterConfig, columnConfig: newCells };\n    refreshLS(newConfig);\n    refreshData({ filterConfig: newConfig });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Column viewing toggle\">\n        <IconButton\n          aria-label=\"Column viewing toggle\"\n          className={styles.columnToggler}\n          onClick={handleClick}\n          aria-describedby={btnId}\n        >\n          <MoreVertIcon />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        disableScrollLock\n        id={btnId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        className={styles.popover}\n      >\n        <FormControl component=\"fieldset\" className={styles.formControl}>\n          <FormGroup>\n            {filterConfig.columnConfig.map(({ id, label, isVisible }) => {\n              return label !== 'Company' ? (\n                <FormControlLabel\n                  key={label}\n                  control={\n                    <Checkbox\n                      checked={isVisible}\n                      onChange={handleChange(id)}\n                      value={label}\n                      color=\"default\"\n                      checkedIcon={<span className={clsx(styles.icon, styles.checkedIcon)} />}\n                      icon={<span className={styles.icon} />}\n                      inputProps={{ 'aria-label': label }}\n                    />\n                  }\n                  label={label}\n                />\n              ) : null;\n            })}\n          </FormGroup>\n        </FormControl>\n      </Popover>\n    </>\n  );\n};\n\nConnectedColumnToggle.defaultProps = {\n  filterConfig: {},\n  refreshData: () => {},\n};\n\nConnectedColumnToggle.propTypes = {\n  filterConfig: PropTypes.shape({\n    orderBy: PropTypes.string,\n    index: PropTypes.shape({\n      sortDirection: PropTypes.string,\n    }),\n    company: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    foundedYear: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    founder: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    fundingTotal: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    businessTypes: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      categories: PropTypes.arrayOf(PropTypes.bool),\n    }),\n    status: PropTypes.shape({\n      isShowOnlyOperating: PropTypes.bool,\n      statusToShow: PropTypes.string,\n    }),\n    searchByAllStr: PropTypes.string,\n    columnConfig: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string,\n        isVisible: PropTypes.bool,\n      })\n    ),\n  }),\n  refreshData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ filterConfig }) => ({\n  filterConfig,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst ColumnToggle = connect(mapStateToProps, mapDispatchToProps)(ConnectedColumnToggle);\n\nexport default ColumnToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CsvDownloader from 'react-csv-downloader';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Toolbar, Typography, IconButton, Tooltip } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport dataToCSVPreparation from '../../utils/data-to-CSV-preparation';\nimport ColumnToggle from '../column-toggle';\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    height: 100,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  description: {\n    color: theme.palette.primary.main,\n    maxWidth: 400,\n    '& *': {\n      paddingBottom: 10,\n      display: 'block',\n    },\n  },\n  download: {\n    padding: '5px 5px 0',\n  },\n}));\n\nconst ConnectedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { selected, filteredData, handleDelete, filterConfig } = props;\n  const numSelected = selected.length;\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography color=\"primary\" variant=\"subtitle1\" className={classes.description}>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <div className={classes.description}>\n          <Typography variant=\"h3\" id=\"tableTitle\">\n            StartUp Investments\n          </Typography>\n          <Typography variant=\"body2\">\n            Information about startup companies and investment\n          </Typography>\n        </div>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div className={classes.tools}>\n          <Tooltip title=\"download CSV\">\n            <IconButton aria-label=\"download CSV\" className={classes.download}>\n              <CsvDownloader\n                datas={dataToCSVPreparation(filteredData, filterConfig)}\n                filename=\"csvData.csv\"\n                separator=\";\"\n              >\n                <GetAppIcon />\n              </CsvDownloader>\n            </IconButton>\n          </Tooltip>\n          <ColumnToggle />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\nConnectedTableToolbar.defaultProps = {\n  filterConfig: {},\n  selected: [],\n  filteredData: [],\n  handleDelete: () => {},\n};\n\nConnectedTableToolbar.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  handleDelete: PropTypes.func,\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      investSum: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  filterConfig: PropTypes.shape({\n    orderBy: PropTypes.string,\n    index: PropTypes.shape({\n      sortDirection: PropTypes.string,\n    }),\n    company: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    foundedYear: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    founder: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    fundingTotal: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    businessTypes: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      categories: PropTypes.arrayOf(PropTypes.bool),\n    }),\n    status: PropTypes.shape({\n      isShowOnlyOperating: PropTypes.bool,\n      statusToShow: PropTypes.string,\n    }),\n    searchByAllStr: PropTypes.string,\n    columnConfig: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string,\n        isVisible: PropTypes.bool,\n      })\n    ),\n  }),\n};\n\nconst mapStateToProps = ({ selected, filteredData, filterConfig }) => ({\n  selected,\n  filteredData,\n  filterConfig,\n});\n\nconst TableToolbar = connect(mapStateToProps, null)(ConnectedTableToolbar);\n\nexport default TableToolbar;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControlLabel, FormGroup, Switch } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  swicther: {\n    position: 'absolute',\n    top: 30,\n    right: 25,\n    zIndex: 10,\n    '& span': {\n      fontSize: 16,\n    },\n  },\n});\n\nconst Switcher = ({ checked, toggleChecked }) => {\n  const styles = useStyles();\n  return (\n    <FormGroup className={styles.swicther}>\n      <FormControlLabel\n        control={<Switch size=\"small\" checked={checked} onChange={toggleChecked} color=\"primary\" />}\n        label=\"Virtual Scroller\"\n        labelPlacement=\"start\"\n      />\n    </FormGroup>\n  );\n};\n\nSwitcher.defaultProps = {\n  checked: true,\n  toggleChecked: () => {},\n};\n\nSwitcher.propTypes = {\n  checked: PropTypes.bool,\n  toggleChecked: PropTypes.func,\n};\n\nexport default Switcher;\n","const getData = (offset, limit, minIndex, initData) => {\n  const start = Math.max(minIndex, offset);\n  const end = Math.min(offset + limit - 1, initData.length);\n  const data = initData.slice(start, end);\n  return data;\n};\n\nexport default getData;\n","const descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n};\n\nexport { getComparator, stableSort };\n","const toggleStatus = (isSelected, filteredData, refreshFilteredData, refreshLS, config) => {\n  let newData = [];\n  if (isSelected) {\n    filteredData.forEach(el => {\n      if (el.status === 'operating') {\n        newData.push(el);\n      }\n    });\n  } else {\n    newData = filteredData.slice();\n  }\n  const newConfig = {\n    ...config,\n    status: { isShowOnlyOperating: isSelected, statusToShow: isSelected ? 'operating' : 'all' },\n  };\n  refreshLS(newConfig);\n  return newData;\n};\n\nexport default toggleStatus;\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport { Tooltip } from '@material-ui/core';\n\nimport refreshData from '../actions';\nimport { DATAGRID_SORT_CONFIG } from '../constantas/settings';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: 20,\n    height: 25,\n    '&:hover': {\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      backgroundColor: theme.palette.secondary.light,\n      '& svg': {\n        fill: theme.palette.background.default,\n      },\n    },\n  },\n}));\n\nconst ConnectedSimpleToggleButton = ({ toggleStatus, refreshData, filterConfig }) => {\n  const styles = useStyles();\n\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n  const isSelected = config.status.isShowOnlyOperating;\n\n  const handleSelect = () => {\n    toggleStatus(!isSelected);\n    refreshData({\n      filterConfig: {\n        ...filterConfig,\n        status: {\n          isShowOnlyOperating: isSelected,\n          statusToShow: isSelected ? 'operating' : 'all',\n        },\n      },\n    });\n  };\n  return (\n    <Tooltip\n      title={isSelected ? 'Show all' : 'Show only operating'}\n      aria-label=\"Show company status\"\n    >\n      <ToggleButton\n        value=\"check\"\n        selected={isSelected}\n        className={styles.button}\n        onChange={handleSelect}\n      >\n        <CheckIcon />\n      </ToggleButton>\n    </Tooltip>\n  );\n};\n\nConnectedSimpleToggleButton.defaultProps = {\n  toggleStatus: () => {},\n  refreshData: () => {},\n  filterConfig: {},\n};\n\nConnectedSimpleToggleButton.propTypes = {\n  toggleStatus: PropTypes.func,\n  refreshData: PropTypes.func,\n  filterConfig: PropTypes.shape({\n    orderBy: PropTypes.string,\n    index: PropTypes.shape({\n      sortDirection: PropTypes.string,\n    }),\n    company: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    foundedYear: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    founder: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    fundingTotal: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    businessTypes: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      categories: PropTypes.arrayOf(PropTypes.bool),\n    }),\n    status: PropTypes.shape({\n      isShowOnlyOperating: PropTypes.bool,\n      statusToShow: PropTypes.string,\n    }),\n    searchByAllStr: PropTypes.string,\n    columnConfig: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string,\n        isVisible: PropTypes.bool,\n      })\n    ),\n  }),\n};\n\nconst mapStateToProps = ({ filterConfig }) => ({ filterConfig });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: data => dispatch(refreshData(data)),\n  };\n};\n\nconst SimpleToggleButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedSimpleToggleButton);\n\nexport default SimpleToggleButton;\n","/* eslint-disable no-shadow */\n/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableSortLabel, Checkbox } from '@material-ui/core';\n\nimport refreshData from '../../actions';\nimport { DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { HEAD_CELLS } from '../../constantas/data-generator-for';\nimport refreshLS from '../../utils/save-in-LS';\nimport toggleStatus from '../../utils/filters';\nimport ToggleButton from '../toggle-button';\n\nconst ConnectedTableHeader = props => {\n  const {\n    order,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    refreshData,\n    scrollLeft,\n    filteredData,\n    filterConfig,\n  } = props;\n\n  const useStyles = makeStyles(theme => ({\n    head: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n    },\n    head2: {\n      position: 'absolute',\n      top: 0,\n      display: 'flex',\n      height: 60,\n      zIndex: 2,\n      '& div': {\n        textAlign: 'center',\n        lineHeight: '50px',\n        borderRight: `1px solid ${theme.palette.secondary.light}`,\n        borderTop: `1px solid ${theme.palette.secondary.light}`,\n        '&:last-child': {\n          borderRight: 'none',\n        },\n      },\n      '& .MuiTableSortLabel-active': {\n        '& .MuiTableSortLabel-icon': {\n          fill: theme.palette.primary.main,\n        },\n      },\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n    checkbox: {\n      minWidth: 50,\n      width: 50,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      padding: 0,\n    },\n    wrap: {\n      border: 'none',\n    },\n    cell: {\n      minWidth: 200,\n      width: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      zIndex: 2,\n    },\n    index: {\n      minWidth: 45,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    icon: {\n      width: 55,\n      minWidth: 50,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    foundedYear: {\n      width: 120,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    fundingTotal: {\n      width: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    status: {\n      minWidth: 100,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      '& .Mui-selected': {\n        backgroundColor: theme.palette.primary.light,\n        '& svg': {\n          fill: theme.palette.background.default,\n        },\n      },\n    },\n    company: {\n      minWidth: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      zIndex: 11,\n    },\n    stickyColumn: {\n      position: 'absolute',\n      top: 0,\n      left: scrollLeft,\n      width: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      zIndex: 11,\n    },\n    sortLabel: {\n      '& svg': {\n        opacity: 0.3,\n        '&:hover': {\n          opacity: 1,\n        },\n      },\n    },\n  }));\n  const columnConfig = filterConfig.columnConfig ? filterConfig.columnConfig : HEAD_CELLS;\n\n  const styles = useStyles();\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n  const { orderBy } = config;\n  const renderCells =\n    scrollLeft < 150\n      ? [...columnConfig]\n      : [...columnConfig, { id: 'companySticky', label: 'Company', isVisible: true }];\n\n  const handleSort = property => () => {\n    onRequestSort(property);\n  };\n  // TODO при изменении shownData количество выбранных должно изменить тоже\n\n  const handleSelectAllClick = ({ target: { checked } }) => {\n    if (checked) {\n      const allSelected = filteredData.map(n => n.id);\n      refreshData({ selected: allSelected });\n    } else {\n      refreshData({ selected: [] });\n    }\n  };\n  const handleStatus = isSelected => {\n    const newData = toggleStatus(isSelected, filteredData, refreshData, refreshLS, config);\n    const newConfig = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n    refreshData({ filterConfig: newConfig });\n    refreshData({ filteredData: newData });\n  };\n\n  return (\n    <div className={styles.head}>\n      <div className={styles.head2}>\n        <div className={styles.checkbox}>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === filteredData.length}\n            onChange={handleSelectAllClick}\n            inputProps={{ 'aria-label': 'select all' }}\n          />\n        </div>\n        {renderCells.map(({ id, label, isVisible }) => {\n          const divClass =\n            id === 'icon'\n              ? styles.icon\n              : id === 'index'\n              ? styles.index\n              : id === 'foundedYear'\n              ? styles.foundedYear\n              : id === 'status'\n              ? styles.status\n              : id === 'fundingTotal'\n              ? styles.fundingTotal\n              : id === 'company'\n              ? styles.company\n              : id === 'companySticky'\n              ? styles.stickyColumn\n              : styles.cell;\n          return (\n            <div key={id} className={styles.wrap}>\n              {isVisible ? (\n                <div className={divClass}>\n                  {['icon', 'geo'].includes(id) ? (\n                    label\n                  ) : id === 'status' ? (\n                    <>\n                      {`${label} `}\n                      <ToggleButton toggleStatus={handleStatus} />\n                    </>\n                  ) : (\n                    <TableSortLabel\n                      active={orderBy === id}\n                      direction={orderBy === id ? order : 'asc'}\n                      onClick={handleSort(id)}\n                      className={styles.sortLabel}\n                    >\n                      {label}\n                      {orderBy === id ? (\n                        <span className={styles.visuallyHidden}>\n                          {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                        </span>\n                      ) : null}\n                    </TableSortLabel>\n                  )}\n                </div>\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nConnectedTableHeader.defaultProps = {\n  numSelected: 0,\n  onRequestSort: () => {},\n  order: 'asc',\n  rowCount: 0,\n  scrollLeft: 0,\n  filteredData: [],\n  refreshData: () => {},\n  filterConfig: {},\n};\n\nConnectedTableHeader.propTypes = {\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  refreshData: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']),\n  rowCount: PropTypes.number,\n  scrollLeft: PropTypes.number,\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  filterConfig: PropTypes.shape({\n    orderBy: PropTypes.string,\n    index: PropTypes.shape({\n      sortDirection: PropTypes.string,\n    }),\n    company: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    foundedYear: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    founder: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    fundingTotal: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    businessTypes: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      categories: PropTypes.arrayOf(PropTypes.bool),\n    }),\n    status: PropTypes.shape({\n      isShowOnlyOperating: PropTypes.bool,\n      statusToShow: PropTypes.string,\n    }),\n    searchByAllStr: PropTypes.string,\n    columnConfig: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string,\n        isVisible: PropTypes.bool,\n      })\n    ),\n  }),\n};\n\nconst mapStateToProps = ({ filteredData, filterConfig }) => ({ filteredData, filterConfig });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst TableHeader = connect(mapStateToProps, mapDispatchToProps)(ConnectedTableHeader);\n\nexport default TableHeader;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { SETTINGS } from '../../constantas/settings';\n\nconst rowStyles = makeStyles(theme => ({\n  row: {\n    display: 'flex',\n    height: SETTINGS.itemHeight,\n    position: 'relative',\n  },\n  checkbox: {\n    minWidth: 50,\n    borderBottom: `1px solid ${theme.palette.secondary.light}`,\n    borderRight: `1px solid ${theme.palette.secondary.light}`,\n  },\n  checkboxChecked: {\n    '& svg': {\n      fill: theme.palette.primary.main,\n    },\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottom: `1px solid ${theme.palette.secondary.light}`,\n    borderRight: `1px solid ${theme.palette.secondary.light}`,\n  },\n  textVerCenter: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    borderBottom: `1px solid ${theme.palette.secondary.light}`,\n    borderRight: `1px solid ${theme.palette.secondary.light}`,\n  },\n  cell: {\n    minWidth: 200,\n    width: 200,\n    height: SETTINGS.itemHeight,\n    wordWrap: 'break-word',\n    backgroundColor: theme.palette.background.default,\n    '&:lastChild': {\n      borderRight: 'none',\n    },\n  },\n  index: {\n    minWidth: 45,\n  },\n  icon: {\n    minWidth: 55,\n  },\n  img: {\n    borderRadius: '50%',\n  },\n  foundedYear: {\n    minWidth: 120,\n    justifyContent: 'flex-end',\n    height: SETTINGS.itemHeight,\n  },\n  status: {\n    minWidth: 100,\n    height: SETTINGS.itemHeight,\n  },\n  fundingTotal: {\n    minWidth: 200,\n    height: SETTINGS.itemHeight,\n    justifyContent: 'flex-end',\n  },\n  link: {\n    color: theme.palette.info.main.dark,\n  },\n  highlightedText: {\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: 4,\n    padding: '0 5px',\n  },\n  cellSelected: {\n    backgroundColor: '#FFC9CC',\n    color: '#000000',\n  },\n  company: {\n    minWidth: 200,\n    width: 200,\n    height: 40,\n    wordWrap: 'break-word',\n  },\n  stickyColumn: {\n    position: 'absolute',\n    top: 0,\n    width: 200,\n    height: SETTINGS.itemHeight,\n    boxShadow: theme.shadows[1],\n    wordWrap: 'break-word',\n    zIndex: 1,\n  },\n  whiteBg: {\n    backgroundColor: theme.palette.background.default,\n  },\n}));\n\nexport default rowStyles;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport theme from '../../themes/themeLight';\nimport refreshData from '../../actions';\nimport rowStyles from './row-styles';\nimport { HEAD_CELLS } from '../../constantas/data-generator-for';\n\nconst coordinateFormatting = n =>\n  n.toLocaleString('ru-RU', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n\nconst ShowCoors = ({ coors, geoClass }) => {\n  const lat = coordinateFormatting(coors.latitude);\n  const long = coordinateFormatting(coors.longitude);\n  return (\n    <>\n      <span>[</span>\n      <span className={geoClass}>{lat}</span>\n      <span>;&#8194;</span>\n      <span className={geoClass}>{long}</span>\n      <span>]</span>\n    </>\n  );\n};\n\nShowCoors.defaultProps = {\n  geoClass: '',\n  coors: { latitude: 0, longitude: 0 },\n};\n\nShowCoors.propTypes = {\n  geoClass: PropTypes.string,\n  coors: PropTypes.shape({ latitude: PropTypes.number, longitude: PropTypes.number }),\n};\n\nconst ConnectedRowTemplate = props => {\n  const { item, selected, refreshData, scrollLeft, filterConfig } = props;\n  const styles = rowStyles(theme);\n  const {\n    index,\n    id,\n    icon,\n    company,\n    url,\n    foundedYear,\n    founder,\n    fundingTotal,\n    status,\n    geo,\n    businessTypes,\n  } = item;\n  const isSelected = name => selected.indexOf(name) !== -1;\n  const [isItemSelected, setIsItemSelected] = useState(false);\n\n  const renderCells = filterConfig.columnConfig ? filterConfig.columnConfig : HEAD_CELLS;\n\n  useEffect(() => {\n    setIsItemSelected(isSelected(id));\n  }, [selected, id]);\n\n  const labelId = `enhanced-table-checkbox-${index}`;\n\n  const handleSelect = () => {\n    const selectedItems = isItemSelected ? selected.filter(el => el !== id) : [...selected, id];\n\n    setIsItemSelected(!isItemSelected);\n    refreshData({ selected: selectedItems });\n  };\n\n  return (\n    <div className={styles.row} key={id}>\n      <div\n        className={clsx(styles.center, styles.checkbox, {\n          [styles.cellSelected]: isItemSelected,\n        })}\n      >\n        <Checkbox\n          checked={isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n          onChange={handleSelect}\n          color=\"secondary\"\n          className={isItemSelected ? styles.checkboxChecked : null}\n        />\n      </div>\n      {filterConfig.columnConfig[0].isVisible ? (\n        <div\n          className={clsx(styles.index, styles.center, { [styles.cellSelected]: isItemSelected })}\n        >\n          {index + 1}\n        </div>\n      ) : null}\n      {filterConfig.columnConfig[1].isVisible ? (\n        <div\n          className={clsx(styles.icon, styles.center, { [styles.cellSelected]: isItemSelected })}\n        >\n          <img src={icon} alt={company} className={styles.img} />\n        </div>\n      ) : null}\n      {renderCells[2].isVisible ? (\n        <div\n          className={clsx(styles.company, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n            [styles.whiteBg]: !isItemSelected,\n          })}\n        >\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.link}>\n            {company}\n          </a>\n        </div>\n      ) : null}\n      {renderCells[2].isVisible && scrollLeft > 150 ? (\n        <div\n          style={{ left: scrollLeft }}\n          className={clsx(styles.stickyColumn, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n            [styles.whiteBg]: !isItemSelected,\n          })}\n        >\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.link}>\n            {company}\n          </a>\n        </div>\n      ) : null}\n      {renderCells[3].isVisible ? (\n        <div\n          className={clsx(styles.foundedYear, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {foundedYear}\n        </div>\n      ) : null}\n      {renderCells[4].isVisible ? (\n        <div\n          className={clsx(styles.cell, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {founder}\n        </div>\n      ) : null}\n      {renderCells[5].isVisible ? (\n        <div\n          className={clsx(styles.fundingTotal, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {fundingTotal.toLocaleString()}\n        </div>\n      ) : null}\n      {renderCells[6].isVisible ? (\n        <div\n          className={clsx(styles.cell, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {businessTypes.map((category, i) => (\n            <span key={`${id}-${category}-${i}`}>\n              |&nbsp;\n              <span className={styles.highlightedText}>{category === '' ? null : category}</span>\n              {i === businessTypes.length - 1 ? ' |' : null}\n            </span>\n          ))}\n        </div>\n      ) : null}\n      {renderCells[7].isVisible ? (\n        <div\n          className={clsx(styles.status, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {status}\n        </div>\n      ) : null}\n      {renderCells[8].isVisible ? (\n        <div\n          className={clsx(styles.cell, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          <ShowCoors coors={geo} geoClass={styles.highlightedText} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nConnectedRowTemplate.defaultProps = {\n  item: {},\n  selected: [],\n  refreshData: () => {},\n  scrollLeft: 0,\n  filterConfig: {},\n};\n\nConnectedRowTemplate.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    index: PropTypes.number,\n    icon: PropTypes.string,\n    company: PropTypes.string,\n    url: PropTypes.string,\n    foundedYear: PropTypes.number,\n    founder: PropTypes.string,\n    fundingTotal: PropTypes.number,\n    status: PropTypes.string,\n    geo: PropTypes.shape({\n      latitude: PropTypes.number,\n      longitude: PropTypes.number,\n    }),\n    businessTypes: PropTypes.arrayOf(PropTypes.string),\n  }),\n  selected: PropTypes.arrayOf(PropTypes.string),\n  refreshData: PropTypes.func,\n  scrollLeft: PropTypes.number,\n  filterConfig: PropTypes.shape({\n    orderBy: PropTypes.string,\n    index: PropTypes.shape({\n      sortDirection: PropTypes.string,\n    }),\n    company: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    foundedYear: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    founder: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchValue: PropTypes.string,\n    }),\n    fundingTotal: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      searchRange: PropTypes.arrayOf(PropTypes.number),\n    }),\n    businessTypes: PropTypes.shape({\n      sortDirection: PropTypes.string,\n      categories: PropTypes.arrayOf(PropTypes.bool),\n    }),\n    status: PropTypes.shape({\n      isShowOnlyOperating: PropTypes.bool,\n      statusToShow: PropTypes.string,\n    }),\n    searchByAllStr: PropTypes.string,\n    columnConfig: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        label: PropTypes.string,\n        isVisible: PropTypes.bool,\n      })\n    ),\n  }),\n};\n\nconst mapStateToProps = ({ selected, filterConfig }) => ({ selected, filterConfig });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: data => dispatch(refreshData(data)),\n  };\n};\nconst RowTemplate = connect(mapStateToProps, mapDispatchToProps)(ConnectedRowTemplate);\nexport default RowTemplate;\n","/* eslint-disable no-shadow */\nimport React, { useState, createRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport refreshData from '../../actions';\nimport getData from '../../utils/get-data';\nimport { SETTINGS, DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { getComparator, stableSort } from '../../utils/sort-functions';\nimport refreshLS from '../../utils/save-in-LS';\nimport TableHeader from './table-head';\nimport RowTemplate from './row-template';\n\nconst setInitialState = settings => {\n  const { itemHeight, amount, tolerance, minIndex, maxIndex, startIndex } = settings;\n  const viewportHeight = amount * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const bufferedItems = amount + 2 * tolerance;\n  const itemsAbove = startIndex - tolerance - minIndex;\n  const topPaddingHeight = itemsAbove * itemHeight + 60;\n  const bottomPaddingHeight = totalHeight - topPaddingHeight;\n  const initialPosition = topPaddingHeight + toleranceHeight;\n  return {\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    initialPosition,\n  };\n};\n\nconst ConnectedVirtualTable = props => {\n  const useStyles = makeStyles({\n    virtScroller: {\n      height: 900,\n      overflow: 'auto',\n      minHeight: 500,\n    },\n  });\n  const styles = useStyles();\n\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n\n  const { selected, shownData, filteredData, refreshData } = props;\n  const [state, setState] = useState(setInitialState(SETTINGS));\n  const [orderBy, setOrderBy] = useState(config.orderBy);\n  const [order, setOrder] = useState(config[orderBy].sortDirection);\n\n  const [scrollVert, setScrollVert] = useState(0);\n  const [scrollLeftState, setScrollLeftState] = useState(0);\n\n  const viewportElement = createRef();\n  const { itemHeight, minIndex, tolerance } = SETTINGS;\n\n  const runScroller = ({ target }) => {\n    const { toleranceHeight, bufferedItems } = state;\n    const { scrollTop, scrollLeft } = target;\n    setScrollLeftState(scrollLeft);\n\n    if (scrollVert !== viewportElement.current.scrollTop) {\n      const index = minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n      const data = getData(index, bufferedItems, minIndex, filteredData);\n      const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0) + 60;\n      const totalHeight = data.length * itemHeight;\n      const bottomPaddingHeight = Math.max(\n        totalHeight - topPaddingHeight - data.length * itemHeight,\n        0\n      );\n      refreshData({ shownData: data });\n      setState({ ...state, topPaddingHeight, bottomPaddingHeight });\n    }\n\n    setScrollVert(viewportElement.current.scrollTop);\n  };\n\n  const handleRequestSort = property => {\n    const isAsc = orderBy === property && order === 'asc';\n\n    const newOrder = isAsc ? 'desc' : 'asc';\n    setOrder(newOrder);\n    setOrderBy(property);\n    const sortedData = stableSort(filteredData, getComparator(newOrder, property));\n\n    const totalHeight = viewportElement.current.clientHeight;\n    const amount = Math.ceil(totalHeight / itemHeight);\n    const data = getData(0, amount + tolerance, 0, sortedData);\n\n    config.orderBy = property;\n    config[property].sortDirection = newOrder;\n    refreshLS(config);\n\n    refreshData({ shownData: data });\n  };\n\n  useEffect(() => {\n    const newSelected = [];\n    filteredData.forEach(el => {\n      if (selected.includes(el.id)) {\n        newSelected.push(el.id);\n      }\n    });\n\n    const data = getData(0, 25, 0, filteredData);\n    refreshData({ shownData: data, selected: newSelected });\n\n    if (!state.initialPosition) {\n      runScroller({ target: { scrollTop: 0 } });\n    }\n  }, [filteredData]);\n\n  const { topPaddingHeight, bottomPaddingHeight } = state;\n\n  return (\n    <div className={styles.virtScroller} ref={viewportElement} onScroll={runScroller}>\n      <TableHeader\n        numSelected={selected.length}\n        order={order}\n        onRequestSort={handleRequestSort}\n        rowCount={shownData.length}\n        scrollLeft={scrollLeftState}\n      />\n      <div style={{ height: topPaddingHeight }} />\n      {shownData.map(item => (\n        <RowTemplate item={item} key={item.id} scrollLeft={scrollLeftState} />\n      ))}\n      <div style={{ height: bottomPaddingHeight }} />\n    </div>\n  );\n};\n\nConnectedVirtualTable.defaultProps = {\n  filteredData: [],\n  shownData: [],\n  selected: [],\n  refreshData: () => {},\n};\n\nConnectedVirtualTable.propTypes = {\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  shownData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  selected: PropTypes.arrayOf(PropTypes.string),\n  refreshData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ filteredData, shownData, selected }) => ({\n  filteredData,\n  shownData,\n  selected,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst VirtualTable = connect(mapStateToProps, mapDispatchToProps)(ConnectedVirtualTable);\n\nexport default VirtualTable;\n","/* eslint-disable no-shadow */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport refreshData from '../../actions';\nimport getData from '../../utils/get-data';\nimport { DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { getComparator, stableSort } from '../../utils/sort-functions';\nimport TableHeader from './table-head';\nimport RowTemplate from './row-template';\nimport refreshLS from '../../utils/save-in-LS';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n    minWidth: 300,\n    height: 900,\n    overflow: 'scroll',\n  },\n  empty: {\n    width: '100%',\n    height: 60,\n    backgroundColor: 'transparent',\n    border: 'none',\n  },\n});\n\nconst ConnectedSimpleTable = props => {\n  const styles = useStyles();\n\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n\n  const { selected, filteredData, refreshData } = props;\n  const [orderBy, setOrderBy] = useState(config.orderBy);\n  const [order, setOrder] = useState(config[orderBy].sortDirection);\n  const [scrollLeftState, setScrollLeftState] = useState(0);\n\n  const runScroller = ({ target }) => {\n    const { scrollLeft } = target;\n    setScrollLeftState(scrollLeft);\n  };\n\n  useEffect(() => {\n    const data = getData(0, 25, 0, filteredData);\n    refreshData({ shownData: data });\n  }, [filteredData]);\n\n  const handleRequestSort = property => {\n    const isAsc = orderBy === property && order === 'asc';\n\n    const newOrder = isAsc ? 'desc' : 'asc';\n    setOrder(newOrder);\n    setOrderBy(property);\n    const sortedData = stableSort(filteredData, getComparator(order, orderBy));\n    refreshLS(config);\n    refreshData({ shownData: sortedData });\n  };\n\n  return (\n    <div className={styles.table} onScroll={runScroller}>\n      <TableHeader\n        numSelected={selected.length}\n        order={order}\n        onRequestSort={handleRequestSort}\n        rowCount={filteredData.length}\n        scrollLeft={scrollLeftState}\n      />\n      <div className={styles.empty} />\n      {filteredData.map(item => (\n        <RowTemplate item={item} key={item.id} scrollLeft={scrollLeftState} />\n      ))}\n    </div>\n  );\n};\n\nConnectedSimpleTable.defaultProps = {\n  selected: [],\n  filteredData: {},\n  refreshData: () => {},\n};\n\nConnectedSimpleTable.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  refreshData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ initialData, filteredData, selected }) => ({\n  initialData,\n  filteredData,\n  selected,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst SimpleTable = connect(mapStateToProps, mapDispatchToProps)(ConnectedSimpleTable);\n\nexport default SimpleTable;\n\n// TODO Preloader пока загружается\n","/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\n\nimport refreshData from '../../actions';\nimport TableToolbar from './table-toolbar';\nimport Switcher from '../switcher';\nimport VirtualTable from './table-virtual';\nimport SimpleTable from './table-simple';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    maxWidth: 1200,\n    minWidth: 400,\n    boxShadow: theme.shadows[3],\n  },\n}));\nconst ConnectedDataGrid = ({ isVirtual, selected, refreshData, initialData }) => {\n  const classes = useStyles();\n  const [isVirtualChecked, setIsVirtualChecked] = React.useState(isVirtual);\n\n  const toggleChecked = () => {\n    setIsVirtualChecked(!isVirtualChecked);\n    refreshData({ isVirtual: !isVirtual });\n  };\n\n  const handleDelete = () => {\n    const newArr = initialData.filter(el => !selected.includes(el.id));\n    refreshData({ initialData: newArr, selected: [], filteredData: newArr });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Switcher checked={isVirtualChecked} toggleChecked={toggleChecked} />\n      <TableToolbar handleDelete={handleDelete} />\n      {isVirtualChecked ? <VirtualTable /> : <SimpleTable />}\n    </div>\n  );\n};\n\nConnectedDataGrid.defaultProps = {\n  initialData: [],\n  isVirtual: true,\n  selected: [],\n  refreshData: () => {},\n};\n\nConnectedDataGrid.propTypes = {\n  initialData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  isVirtual: PropTypes.bool,\n  selected: PropTypes.arrayOf(PropTypes.string),\n  refreshData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ isVirtual, initialData, selected }) => ({\n  isVirtual,\n  initialData,\n  selected,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: data => dispatch(refreshData(data)),\n  };\n};\n\nconst DataGrid = connect(mapStateToProps, mapDispatchToProps)(ConnectedDataGrid);\n\nexport default DataGrid;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Radio } from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    backgroundColor: theme.palette.background.default,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: theme.palette.primary.main,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n}));\nconst StyledRadio = props => {\n  const classes = useStyles();\n\n  return (\n    <Radio\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n};\n\nexport default StyledRadio;\n","/* eslint-disable no-shadow */\n// TODO при сбросе фильтров стрелка сортировки остается, а сортировка не применяется\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Divider,\n  Button,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  FormGroup,\n  InputBase,\n  RadioGroup,\n  Slider,\n  Input,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\n\nimport refreshData from '../../actions';\nimport StyledRadio from './styled-radio';\nimport {\n  BUSINESS_TYPES,\n  COMPANY_STATUS,\n  MIN_YEAR,\n  MAX_YEAR,\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM,\n} from '../../constantas/data-generator-for';\nimport { SORT_CONFIG, DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { getComparator, stableSort } from '../../utils/sort-functions';\nimport refreshLS from '../../utils/save-in-LS';\n\nconst useStyles = makeStyles(theme => ({\n  wrap: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: 300,\n    minWidth: 300,\n    height: 1000,\n    marginBottom: 40,\n    padding: 10,\n    marginRight: 10,\n    boxShadow: theme.shadows[3],\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '20px 0 20px',\n    '& div': {\n      height: 30,\n    },\n    '& h3': {\n      padding: 0,\n    },\n  },\n  filter: {\n    padding: '10 0',\n    marginBottom: 20,\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: 20,\n    },\n  },\n  title: {\n    fontSize: '1.2rem',\n    lineHeight: '1.2',\n    fontWeight: 'bold',\n    color: theme.palette.text.primary,\n    margin: '10px 0 10px',\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    backgroundColor: theme.palette.background.default,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: theme.palette.primary.main,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.1), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    fontSize: '1rem',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    backgroundColor: fade(theme.palette.secondary.light, 0.25),\n    [theme.breakpoints.up('sm')]: {\n      width: 150,\n      '&:focus': {\n        backgroundColor: fade(theme.palette.secondary.light, 0.15),\n        width: 245,\n      },\n    },\n  },\n  inputHeader: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    backgroundColor: fade(theme.palette.secondary.light, 0.25),\n    [theme.breakpoints.up('sm')]: {\n      width: 150,\n      '&:focus': {\n        backgroundColor: fade(theme.palette.secondary.light, 0.15),\n        width: 190,\n      },\n    },\n  },\n  range: {\n    width: 240,\n    margin: '25px 20px 0',\n  },\n  inputs: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  input: {\n    width: 60,\n  },\n  fundInput: {\n    width: 85,\n  },\n}));\n// Алгоритм работы фильтра:\n// 1) изначально filteredData = initialData\n// 2) берем filterConfig, config = filterConfig,\n// 3) применяем по очереди фильтры соответсвенно config\n// 4) обновляем filteredData\n// 5) получаем shownData от filteredData\n// 6) слушаем изменения config\n// 7) записываем изменения config в filterConfig\n// 8) при появлении новых значений фильтров, повторям от шага 2 заново\nconst ConnectedFilters = props => {\n  // шаг 1) изначально filteredData = initialData\n  const { refreshData, initialData, filteredData, isVirtual } = props;\n  const styles = useStyles();\n\n  // шаг 2) берем filterConfig, config = filterConfig,\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n  const [checkedCategories, setCheckedCategories] = useState([]);\n  let filteredDataAfterCheckboxes = filteredData.slice();\n  const [searchAll, setSearchAll] = useState('');\n  const [searchedCompany, setSearchedCompany] = useState('');\n  const [searchedFounder, setSearchedFounder] = useState('');\n  let status = config.status.statusToShow;\n  const [yearsRange, setYearsRange] = React.useState([MIN_YEAR, MAX_YEAR]);\n  const [fundRange, setFundRange] = React.useState([MIN_INVEST_SUM, MAX_INVEST_SUM]);\n  const checkedCategories1 = [];\n  const labels = [...COMPANY_STATUS, 'all'];\n\n  // подготовка значений для checkbox фильтрации\n  const categoryMap = new Map();\n  BUSINESS_TYPES.forEach((type, i) => {\n    categoryMap.set(type, config.businessTypes.categories[i]);\n    if (config.businessTypes.categories[i]) {\n      checkedCategories1.push(type);\n    }\n  });\n\n  const handleResetFilter = () => {\n    // шаг 7) записываем изменения config\n    refreshLS(SORT_CONFIG);\n    setCheckedCategories([]);\n  };\n\n  const handleCompanySearch = ({ target: { value } }) => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.company.toLowerCase().includes(value.toLowerCase())) {\n        newData.push(el);\n      }\n    });\n    config.company.searchValue = value;\n    setSearchedCompany(value);\n    // шаг 4) обновляем filteredData\n    refreshData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleFoundersSearch = ({ target: { value } }) => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.founder.toLowerCase().includes(value.toLowerCase())) {\n        newData.push(el);\n      }\n    });\n    config.founder.searchValue = value;\n    setSearchedFounder(value);\n    // шаг 4) обновляем filteredData\n    refreshData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleSearch = ({ target: { value } }) => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (\n        el.founder.toLowerCase().includes(value.toLowerCase()) ||\n        el.company.toLowerCase().includes(value.toLowerCase())\n      ) {\n        newData.push(el);\n      }\n    });\n    config.searchByAllStr = value;\n    setSearchAll(value);\n    // шаг 4) обновляем filteredData\n    refreshData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleCheckboxChange = ({ target }) => {\n    const { value, checked } = target;\n    categoryMap.set(value, checked);\n\n    const set = new Set(checkedCategories);\n    if (checked) {\n      set.add(value);\n    } else {\n      set.delete(value);\n    }\n\n    const typeIndex = BUSINESS_TYPES.indexOf(value);\n    config.businessTypes.categories[typeIndex] = checked;\n    const newArr = [...set];\n    setCheckedCategories(newArr);\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleStatusChange = ({ target: { value } }) => {\n    let newData = [];\n    if (value === 'all') {\n      newData = [...filteredDataAfterCheckboxes];\n    } else {\n      filteredDataAfterCheckboxes.forEach(el => {\n        if (el.status === value) {\n          newData.push(el);\n        }\n      });\n    }\n    config.status.statusToShow = value;\n    config.status.isShowOnlyOperating = value === 'operating';\n\n    // шаг 4) обновляем filteredData\n    refreshData({ filteredData: newData });\n    status = value;\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n    refreshData({ filterConfig: config });\n  };\n\n  const yearsRangeFilter = range => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.foundedYear >= range[0] && el.foundedYear <= range[1]) {\n        newData.push(el);\n      }\n    });\n    config.foundedYear.searchRange = range;\n\n    // шаг 4) обновляем filteredData\n    refreshData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n    // setYearsRange(range);\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const fundRangeFilter = range => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.fundingTotal >= range[0] && el.fundingTotal <= range[1]) {\n        newData.push(el);\n      }\n    });\n    config.fundingTotal.searchRange = range;\n\n    // шаг 4) обновляем filteredData\n    refreshData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n    // setFundRange(range);\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  // TODO add to checkbox - None ofthis businesses\n\n  // шаг 3) применяем по очереди фильтры соответсвенно config\n  const filtering = () => {\n    // checkbox with Type of businesses\n    let newData = [];\n    if (![0, BUSINESS_TYPES.length].includes(checkedCategories.length)) {\n      initialData.forEach(el => {\n        const el1 = el.businessTypes.map(category => {\n          return checkedCategories.includes(category);\n        });\n        if (el1.some(element => element === true)) {\n          newData.push(el);\n        }\n      });\n    } else {\n      newData = initialData.slice();\n    }\n    // шаг 4) обновляем filteredData\n\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // input company\n    const searchedCompany1 = config.company.searchValue;\n    handleCompanySearch({ target: { value: searchedCompany1 } });\n\n    // input founder\n    const searchedFounder1 = config.founder.searchValue;\n    handleFoundersSearch({ target: { value: searchedFounder1 } });\n\n    // radio status\n    const searchedStatus = config.status.statusToShow;\n    handleStatusChange({ target: { value: searchedStatus } });\n\n    // years range filter\n    const yearsRange1 = config.foundedYear.searchRange;\n    yearsRangeFilter(yearsRange1);\n\n    // fund range filter\n    const fundRange1 = config.fundingTotal.searchRange;\n    fundRangeFilter(fundRange1);\n\n    // search by all\n    const search = config.searchByAllStr;\n    handleSearch({ target: { value: search } });\n\n    // sorting\n    const { orderBy } = config;\n    const order = config[orderBy].sortDirection;\n    const sortedData = stableSort(filteredDataAfterCheckboxes, getComparator(order, orderBy));\n    refreshData({ filteredData: sortedData });\n    filteredDataAfterCheckboxes = sortedData.slice();\n    // status toggling\n    const isSelected = config.status.isShowOnlyOperating;\n    if (isSelected) {\n      handleStatusChange({ target: { value: 'operating' } });\n    }\n  };\n\n  const handleYearsRange = (e, newValue) => {\n    yearsRangeFilter(newValue);\n    setYearsRange(newValue);\n  };\n  const handleMinYearChange = ({ target: { value } }) => {\n    if (value <= yearsRange[1]) {\n      const newRange = [Number(value), yearsRange[1]];\n      yearsRangeFilter(newRange);\n      setYearsRange(newRange);\n    }\n  };\n  const handleMaxYearChange = ({ target: { value } }) => {\n    if (value >= yearsRange[0]) {\n      const newRange = [yearsRange[0], Number(value)];\n      yearsRangeFilter(newRange);\n      setYearsRange(newRange);\n    }\n  };\n  const handleYearBlur = () => {\n    if (yearsRange[0] < MIN_YEAR) {\n      const newRange = [MIN_YEAR, yearsRange[1]];\n      yearsRangeFilter(newRange);\n      setYearsRange([MIN_YEAR, yearsRange[1]]);\n    } else if (yearsRange[1] > MAX_YEAR) {\n      const newRange = [yearsRange[0], MAX_YEAR];\n      yearsRangeFilter(newRange);\n      setYearsRange([yearsRange[0], MAX_YEAR]);\n    }\n  };\n\n  const handleFundRange = (e, newValue) => {\n    fundRangeFilter(newValue);\n    setFundRange(newValue);\n  };\n  const handleMinFundChange = ({ target: { value } }) => {\n    if (value <= fundRange[1]) {\n      const newRange = [Number(value), fundRange[1]];\n      fundRangeFilter(newRange);\n      setFundRange(newRange);\n    }\n  };\n  const handleMaxFundChange = ({ target: { value } }) => {\n    if (value >= fundRange[0]) {\n      const newRange = [fundRange[0], Number(value)];\n      fundRangeFilter(newRange);\n      setFundRange(newRange);\n    }\n  };\n  const handleFundBlur = () => {\n    if (fundRange[0] < MIN_INVEST_SUM) {\n      const newRange = [MIN_INVEST_SUM, fundRange[1]];\n      fundRangeFilter(newRange);\n      setFundRange([MIN_INVEST_SUM, fundRange[1]]);\n    } else if (fundRange[1] > MAX_INVEST_SUM) {\n      const newRange = [fundRange[0], MAX_INVEST_SUM];\n      fundRangeFilter(newRange);\n      setFundRange([fundRange[0], MAX_INVEST_SUM]);\n    }\n  };\n\n  // шаг 6) слушаем изменения config\n  useEffect(() => {\n    filtering();\n  }, [\n    checkedCategories,\n    searchedCompany,\n    searchedFounder,\n    status,\n    searchAll,\n    isVirtual,\n    yearsRange,\n    fundRange,\n  ]);\n\n  useEffect(() => {\n    setCheckedCategories(checkedCategories1);\n  }, []);\n\n  return (\n    <div className={styles.wrap}>\n      <div className={styles.filters}>\n        <div className={styles.header}>\n          <Typography variant=\"h3\">Filters</Typography>\n          <div className={styles.search}>\n            <div className={styles.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search everywhere\"\n              classes={{\n                root: styles.inputRoot,\n                input: styles.inputHeader,\n              }}\n              inputProps={{ 'aria-label': 'Search everywhere' }}\n              onChange={handleSearch}\n              value={config.searchByAllStr || ''}\n            />\n          </div>\n        </div>\n        <Divider />\n\n        <div className={styles.filter}>\n          <Typography className={styles.title}>Company</Typography>\n          <div className={styles.search}>\n            <div className={styles.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by company name\"\n              classes={{\n                root: styles.inputRoot,\n                input: styles.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'Search by company name' }}\n              onChange={handleCompanySearch}\n              value={config.company.searchValue || ''}\n            />\n          </div>\n        </div>\n\n        <div className={styles.filter}>\n          <Typography className={styles.title}>Founder</Typography>\n          <div className={styles.search}>\n            <div className={styles.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by company founders\"\n              classes={{\n                root: styles.inputRoot,\n                input: styles.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'Search by company founders' }}\n              onChange={handleFoundersSearch}\n              value={config.founder.searchValue}\n            />\n          </div>\n        </div>\n\n        <div className={styles.filter}>\n          <FormControl component=\"fieldset\" className={styles.formControl}>\n            <FormLabel component=\"legend\" className={styles.title}>\n              Type of business\n            </FormLabel>\n            <FormGroup>\n              {BUSINESS_TYPES.map(category => {\n                return (\n                  <FormControlLabel\n                    key={category}\n                    control={\n                      <Checkbox\n                        checked={categoryMap.get(category)}\n                        onChange={handleCheckboxChange}\n                        value={category}\n                        color=\"default\"\n                        checkedIcon={<span className={clsx(styles.icon, styles.checkedIcon)} />}\n                        icon={<span className={styles.icon} />}\n                        inputProps={{ 'aria-label': category }}\n                      />\n                    }\n                    label={category}\n                  />\n                );\n              })}\n            </FormGroup>\n          </FormControl>\n        </div>\n\n        <div className={styles.filter}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\" className={styles.title}>\n              Status of company\n            </FormLabel>\n            <RadioGroup\n              aria-label=\"Status of compan\"\n              name=\"Status of compan\"\n              onChange={handleStatusChange}\n              value={status}\n            >\n              {labels.map(label => (\n                <FormControlLabel\n                  key={label}\n                  control={<StyledRadio />}\n                  value={label}\n                  label={label}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </div>\n\n        <div className={styles.filter}>\n          <Typography className={styles.title}>Year of foundation range</Typography>\n          <Slider\n            min={MIN_YEAR}\n            max={MAX_YEAR}\n            step={1}\n            value={yearsRange}\n            onChange={handleYearsRange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"Year of foundation range\"\n            className={styles.range}\n          />\n          <div className={styles.inputs}>\n            <Input\n              className={styles.input}\n              value={yearsRange[0]}\n              onChange={handleMinYearChange}\n              onBlur={handleYearBlur}\n              inputProps={{\n                step: 1,\n                min: MIN_YEAR,\n                max: MAX_YEAR,\n                type: 'number',\n                'aria-labelledby': 'minimum value in years range of company released',\n              }}\n            />\n            <Input\n              className={styles.input}\n              value={yearsRange[1]}\n              onChange={handleMaxYearChange}\n              onBlur={handleYearBlur}\n              inputProps={{\n                step: 1,\n                min: MIN_YEAR,\n                max: MAX_YEAR,\n                type: 'number',\n                'aria-labelledby': 'maximum value in years range of company released',\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.filter}>\n        <Typography className={styles.title}>\n          Funding total, USD &#215; 10<sup>3</sup>\n        </Typography>\n        <Slider\n          min={MIN_INVEST_SUM}\n          max={MAX_INVEST_SUM}\n          step={5}\n          value={fundRange}\n          onChange={handleFundRange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"Year of foundation range\"\n          className={styles.range}\n        />\n        <div className={styles.inputs}>\n          <Input\n            className={styles.input}\n            value={fundRange[0]}\n            onChange={handleMinFundChange}\n            onBlur={handleFundBlur}\n            inputProps={{\n              step: 5,\n              min: MIN_INVEST_SUM,\n              max: MAX_INVEST_SUM,\n              type: 'number',\n              'aria-labelledby': 'minimum value of company funding',\n            }}\n          />\n          <Input\n            className={styles.input}\n            value={fundRange[1]}\n            onChange={handleMaxFundChange}\n            onBlur={handleFundBlur}\n            inputProps={{\n              step: 5,\n              min: MIN_INVEST_SUM,\n              max: MAX_INVEST_SUM,\n              type: 'number',\n              'aria-labelledby': 'maximum value of company funding',\n            }}\n          />\n        </div>\n      </div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={styles.defaultSettings}\n        onClick={handleResetFilter}\n      >\n        Reset filters\n      </Button>\n    </div>\n  );\n};\n\nConnectedFilters.defaultProps = {\n  initialData: [],\n  filteredData: [],\n  isVirtual: true,\n  refreshData: () => {},\n};\n\nConnectedFilters.propTypes = {\n  initialData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n  isVirtual: PropTypes.bool,\n  refreshData: PropTypes.func,\n};\n\nconst mapStateToProps = ({ initialData, filteredData, isVirtual }) => ({\n  initialData,\n  filteredData,\n  isVirtual,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: data => dispatch(refreshData(data)),\n  };\n};\n\n// TODO стилизовать фильтр как навбар при разрешении менее 600, чтоб выдвигался сбоку из гамбургера элемент Drawer из  material\nconst FiltersWithoutRouter = connect(mapStateToProps, mapDispatchToProps)(ConnectedFilters);\nconst Filters = withRouter(FiltersWithoutRouter); // TODO query string for\nexport default Filters;\n","/* eslint-disable no-shadow */\nimport React from 'react';\n// import queryString from 'query-string';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport theme from '../themes/themeLight';\nimport DataGrid from './table/datagrid';\nimport Filters from './filters/filters';\nimport { SORT_CONFIG, DATAGRID_SORT_CONFIG } from '../constantas/settings';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    justifyContent: 'center',\n    padding: 20,\n  },\n});\n\nconst App = () => {\n  const styles = useStyles();\n  let sortConfig;\n  const sortConfigJSON = localStorage.getItem(DATAGRID_SORT_CONFIG);\n  try {\n    sortConfig = { ...(sortConfigJSON === null ? SORT_CONFIG : JSON.parse(sortConfigJSON)) };\n  } catch (e) {\n    localStorage.removeItem(DATAGRID_SORT_CONFIG);\n    sortConfig = { ...SORT_CONFIG };\n  }\n  localStorage.removeItem(DATAGRID_SORT_CONFIG);\n  localStorage.setItem(DATAGRID_SORT_CONFIG, JSON.stringify(sortConfig));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={styles.container}>\n        <Filters />\n        <DataGrid />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\n// TODO обнови Readme\n// TODO удлаить папку table и заново table => конфликт с Table\n// TODO удали из еслинта про консоль лог и удали их из кода\n// TODO По наведению на геолокацию выводится всплывающее окошко с картой, на которой отмечена меткой расположение фирмы\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n});\n","function draw() {\n  // grain is basically level of detail. higher = finer.\n  const grain = 5;\n  let blockout = Math.random();\n  const canvas = document.createElement('CANVAS');\n  canvas.width = 30;\n  canvas.height = 30;\n  document.body.append(canvas);\n  const w = 30;\n  const h = 30;\n  const colorArray = [];\n  let pokeOut;\n  let dataURI;\n  if (canvas.getContext) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillStyle = 'transparent';\n    ctx.fillRect(0, 0, w, h);\n\n    const randomRGB = (min, max) => {\n      const minX = Math.ceil(min);\n      const maxX = Math.floor(max);\n      for (let i = 0; i < 3; i += 1) {\n        colorArray.push(Math.floor(Math.random() * (maxX - minX)) + minX);\n      }\n    };\n\n    pokeOut = () => {\n      randomRGB(0, 255);\n      let posX = 0;\n      let posY = 0;\n      let startFillRed = colorArray[0];\n      let startFillGreen = colorArray[1];\n      let startFillBlue = colorArray[2];\n      const colorRange = 5;\n      ctx.fillStyle = `rgb(${startFillRed},${startFillGreen},${startFillBlue})`;\n\n      for (let y = 0; y < grain; y += 1) {\n        for (let x = 0; x < grain; x += 1) {\n          if (blockout < 0.4) {\n            ctx.fillRect(posX, posY, w / grain, h / grain);\n            ctx.fillRect(w - posX - w / grain, posY, w / grain, h / grain);\n            posX += w / grain;\n          } else {\n            startFillRed -= colorRange;\n            startFillGreen += colorRange;\n            startFillBlue += colorRange;\n            ctx.fillStyle = `rgb(${startFillRed},${startFillGreen},${startFillBlue})`;\n            posX += w / grain;\n          }\n          blockout = Math.random();\n        }\n        posY += h / grain;\n        posX = 0;\n      }\n\n      dataURI = canvas.toDataURL();\n      canvas.remove();\n    };\n  }\n  pokeOut();\n  return dataURI;\n}\n\nexport default draw;\n","import dataGenerator from './data-generator';\nimport { ROW_NUMBER } from '../constantas/settings';\nimport {\n  BUSINESS_TYPES,\n  COMPANY_STATUS,\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM,\n} from '../constantas/data-generator-for';\n\nconst data = (n, generator, bussinessTypes, companyStatus, minInvestSum, maxInvestSum) => {\n  const arr = [];\n  for (let i = 0; i < n; i += 1) {\n    arr.push({\n      ...generator(bussinessTypes, companyStatus, minInvestSum, maxInvestSum),\n      ...{ index: i },\n    });\n  }\n  return arr;\n};\n\nexport default data(\n  ROW_NUMBER,\n  dataGenerator,\n  BUSINESS_TYPES,\n  COMPANY_STATUS,\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM\n);\n","import Fakerator from 'fakerator';\nimport drawIcon from './icon-generator';\n\nconst dataGenerator = (bussinessTypes, companyStatus, minInvestSum, maxInvestSum) => {\n  const fakerator = Fakerator('en-EN');\n\n  fakerator.seed(Math.floor(Math.random() * 10000000));\n\n  const id = fakerator.random.masked('aaa-AAA_999999:*');\n  const icon = drawIcon();\n  const company = fakerator.company.name();\n  const url = `https://${fakerator.random.string(10)}.com`;\n  const foundedYear = fakerator.date.past(10, new Date()).getFullYear();\n  const founder = fakerator.names.name();\n  const fundingTotal = fakerator.random.number(minInvestSum, maxInvestSum);\n  const stillAlive = fakerator.random.boolean();\n  const status = stillAlive ? companyStatus[0] : companyStatus[1];\n  const geo = fakerator.address.geoLocation();\n  const businessTypes = [];\n\n  while (businessTypes.length === 0) {\n    for (let j = 0; j < 2; j += 1) {\n      const k = fakerator.random.number(0, 5);\n      const value = bussinessTypes[k];\n      if (value !== undefined && !businessTypes.includes(value)) {\n        businessTypes.push(value);\n      }\n    }\n  }\n  return {\n    id,\n    icon,\n    company,\n    url,\n    foundedYear,\n    founder,\n    fundingTotal,\n    status,\n    geo,\n    businessTypes,\n  };\n};\n\nexport default dataGenerator;\n","import REFRESH_DATA from './constantas/action-types';\nimport data from './utils/data';\nimport { SORT_CONFIG } from './constantas/settings';\n\nconst initialState = {\n  initialData: data,\n  filteredData: data,\n  shownData: [],\n  selected: [],\n  filterConfig: SORT_CONFIG,\n  isVirtual: true,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REFRESH_DATA:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// import {\n//   DELETE_ITEM,\n//   REFRESH_DATA,\n//   REFRESH_FILTERED_DATA,\n//   REFRESH_SHOWN_DATA,\n// } from './constantas/action-types';\n// Redux can hold business logic inside its own layer (middleware)\n//  Looks like we want to check the action payload (and the title property) before the action is passed to the reducer. There should be a way for tapping into the application's flow. And guess what, that's exactly what a Redux middleware does.\n\nconst middleware = () => {\n  return next => {\n    return action => {\n      // console.log('action: ', action);\n      // // console.log('store: ', store);\n      // if (action.type === REFRESH_FILTERED_DATA) {\n      //   console.log('action type REFRESH_FILTERED_DATA', action.payload);\n      // return store.dispatch({ type: REFRESH_FILTERED_DATA });\n      // }\n      return next(action);\n    };\n  };\n};\n\nexport default middleware;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, storeEnhancers(applyMiddleware(middleware)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport history from './history';\nimport store from './store';\n// TODO query-string\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}