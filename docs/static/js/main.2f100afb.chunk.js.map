{"version":3,"sources":["themes/themeLight.js","actions.js","constantas/action-types.js","utils/data-to-CSV-preparation.js","constantas/data-generator-for.js","constantas/settings.js","utils/save-in-LS.js","components/column-toggle.jsx","components/table/table-toolbar.jsx","components/switcher.jsx","utils/get-data.js","utils/sort-functions.js","utils/filters.js","components/toggle-button.jsx","components/table/table-head.jsx","components/table/row-styles.js","components/table/row-template.jsx","utils/icon-generator.js","utils/data.js","utils/data-generator.js","reducer.js","middleware.js","store.js","components/table/table-virtual.jsx","components/table/table-simple.jsx","components/table/datagrid.jsx","components/filters/styled-radio.jsx","components/filters/filters.jsx","components/app.jsx","history.js","index.jsx"],"names":["theme","createMuiTheme","palette","type","primary","main","contrastText","secondary","text","background","default","typography","fontFamily","fontSize","h1","lineHeight","fontWeight","color","margin","h2","h3","padding","h6","body1","body2","button","caption","spacing","factor","overrides","MuiCssBaseline","fontStyle","MuiInput","underline","borderBottom","responsiveFontSizes","refreshData","payload","selectItem","refreshFilteredData","dataToCSVPreparation","data","map","index","id","company","url","foundedYear","founder","fundingTotal","status","geo","num","n","toLocaleString","maximumFractionDigits","minimumFractionDigits","categories","businessTypes","reduce","accumulator","currentValue","latitude","longitude","BUSINESS_TYPES","COMPANY_STATUS","MAX_YEAR","Date","getFullYear","MIN_YEAR","HEAD_CELLS","label","isVisible","SETTINGS","itemHeight","amount","tolerance","minIndex","maxIndex","startIndex","SORT_CONFIG","orderBy","sortDirection","searchValue","searchRange","Array","length","fill","isShowOnlyOperating","statusToShow","searchByAllStr","columnConfig","refreshLS","configure","localStorage","removeItem","setItem","JSON","stringify","useStyles","makeStyles","columnToggler","icon","borderRadius","width","height","boxShadow","backgroundColor","backgroundImage","outline","outlineOffset","light","checkedIcon","display","content","popover","ConnectedColumnToggle","props","styles","filterConfig","React","useState","anchorEl","setAnchorEl","open","Boolean","btnId","undefined","Tooltip","title","IconButton","aria-label","className","onClick","event","currentTarget","aria-describedby","Popover","disableScrollLock","onClose","anchorOrigin","vertical","horizontal","transformOrigin","FormControl","component","formControl","FormGroup","idCurrent","FormControlLabel","key","control","Checkbox","checked","onChange","newCells","item","newConfig","value","clsx","inputProps","defaultProps","selected","filteredData","ColumnToggle","connect","dispatch","rows","useToolbarStyles","root","justifyContent","alignItems","highlight","lighten","dark","description","maxWidth","paddingBottom","download","ConnectedTableToolbar","classes","handleDelete","numSelected","csvData","setCsvData","useEffect","Toolbar","Typography","variant","tools","datas","filename","separator","TableToolbar","swicther","position","top","right","zIndex","Switcher","toggleChecked","Switch","size","labelPlacement","getData","offset","limit","initData","start","Math","max","end","min","slice","descendingComparator","a","b","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","toggleStatus","isSelected","config","console","log","newData","forEach","push","SimpleToggleButton","parse","getItem","ToggleButton","ConnectedTableHeader","rowCount","onRequestSort","scrollLeft","head","head2","textAlign","borderRight","borderTop","visuallyHidden","border","clip","overflow","checkbox","minWidth","shadows","wrap","cell","stickyColumn","left","sortLabel","opacity","renderCells","handleStatus","indeterminate","target","allSelected","property","divClass","includes","TableSortLabel","active","direction","TableHeader","refreshShownData","rowStyles","row","checkboxChecked","center","textVerCenter","wordWrap","img","link","info","highlightedText","cellSelected","whiteBg","coordinateFormatting","ShowCoors","coors","geoClass","lat","long","RowTemplate","isItemSelected","setIsItemSelected","name","indexOf","labelId","selectedItems","filter","src","alt","href","rel","style","category","i","draw","blockout","random","canvas","document","createElement","body","append","pokeOut","dataURI","w","colorArray","getContext","ctx","clearRect","fillStyle","fillRect","minX","ceil","maxX","floor","randomRGB","posX","posY","startFillRed","startFillGreen","startFillBlue","y","x","h","toDataURL","remove","generator","bussinessTypes","companyStatus","minInvestSum","maxInvestSum","arr","fakerator","Fakerator","seed","masked","drawIcon","string","date","past","names","number","boolean","address","geoLocation","j","initialState","initialData","shownData","isVirtual","reducer","state","action","middleware","next","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","VirtualTable","virtScroller","minHeight","settings","viewportHeight","totalHeight","toleranceHeight","topPaddingHeight","bufferHeight","bufferedItems","bottomPaddingHeight","initialPosition","setInitialState","setState","setOrderBy","setOrder","scrollVert","setScrollVert","scrollLeftState","setScrollLeftState","shownDataState","setShownDataState","viewportElement","createRef","runScroller","scrollTop","current","subscribe","getState","ref","onScroll","newOrder","sortedData","clientHeight","table","SimpleTable","DataGrid","toggleVirtualTable","isVirtualChecked","setIsVirtualChecked","newArr","StyledRadio","Radio","flexDirection","marginBottom","marginRight","header","breakpoints","down","search","shape","marginLeft","up","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","fade","inputHeader","range","inputs","input","fundInput","FiltersWithoutRouter","checkedCategories","setCheckedCategories","filteredDataAfterCheckboxes","searchAll","setSearchAll","searchedCompany","setSearchedCompany","searchedFounder","setSearchedFounder","yearsRange","setYearsRange","fundRange","setFundRange","checkedCategories1","labels","categoryMap","Map","set","handleCompanySearch","toLowerCase","handleFoundersSearch","handleSearch","handleCheckboxChange","Set","add","delete","typeIndex","handleStatusChange","yearsRangeFilter","fundRangeFilter","handleYearBlur","newRange","handleFundBlur","some","element","searchedCompany1","searchedFounder1","searchedStatus","yearsRange1","fundRange1","filtering","filters","InputBase","placeholder","Divider","FormLabel","get","RadioGroup","Slider","step","e","newValue","valueLabelDisplay","aria-labelledby","Input","Number","onBlur","Button","defaultSettings","Filters","withRouter","container","flexWrap","App","sortConfig","sortConfigJSON","ThemeProvider","CssBaseline","createBrowserHistory","ReactDOM","render","history","getElementById"],"mappings":"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","file":"static/js/main.2f100afb.chunk.js","sourcesContent":["import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport '@openfonts/ubuntu-condensed_cyrillic';\n\nconst ubuntuCondensed = {\n  fontFamily: 'Ubuntu Condensed',\n  fontStyle: 'normal',\n  fontWeight: '400',\n};\n// palette created with material palette generator https://material.io/inline-tools/color/\nconst theme = createMuiTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#E8676B',\n      contrastText: '#FFFFFF',\n    },\n    secondary: {\n      main: '#bbbbbb',\n      contrastText: '#3d4451',\n    },\n    text: {\n      primary: '#3d4451',\n      secondary: '#3d4451',\n    },\n    background: {\n      default: '#FFFFFF',\n    },\n  },\n  typography: {\n    fontFamily: 'Ubuntu Condensed',\n    fontSize: 16,\n    h1: {\n      fontSize: '3.5rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 30px',\n    },\n    h2: {\n      fontSize: '2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '20px 0 20px',\n    },\n    h3: {\n      fontSize: '1.6rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      padding: '10px 0 20px',\n    },\n    h6: {\n      fontSize: '1.2rem',\n      lineHeight: '1.2',\n      fontWeight: 'bold',\n      color: '#3d4451',\n      margin: '10px 0 10px',\n    },\n    body1: {\n      fontSize: '1.25rem',\n      lineHeight: '1.6',\n      color: '#000000',\n    },\n    body2: {\n      fontSize: '1rem',\n      lineHeight: '1.4',\n      color: 'rgb(61, 68, 81)',\n    },\n    button: {\n      fontSize: '1rem',\n      lineHeight: '1.4',\n      color: 'rgb(61, 68, 81)',\n    },\n    caption: {\n      fontSize: '.8rem',\n      lineHeight: '1',\n      color: 'rgb(61, 68, 81)',\n    },\n  },\n  spacing: factor => `${0.25 * factor}rem`, // (Bootstrap strategy)\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        '@font-face': [ubuntuCondensed],\n      },\n    },\n    MuiInput: {\n      underline: {\n        '&&&&:hover:before': {\n          borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\n        },\n      },\n    },\n  },\n});\n\nexport default responsiveFontSizes(theme);\n","import {\n  REFRESH_DATA,\n  DELETE_ITEM,\n  SELECT_ITEM,\n  FILTERS_CONFIG,\n  REFRESH_FILTERED_DATA,\n  REFRESH_SHOWN_DATA,\n  TOGGLE_VIRTUAL_TABLE,\n} from './constantas/action-types';\n\nconst refreshData = payload => {\n  return { type: REFRESH_DATA, payload };\n};\n\nconst deleteItem = payload => {\n  return { type: DELETE_ITEM, payload };\n};\n\nconst selectItem = payload => {\n  return { type: SELECT_ITEM, payload };\n};\n\nconst refreshFilterConfig = payload => {\n  return { type: FILTERS_CONFIG, payload };\n};\n\nconst refreshFilteredData = payload => {\n  return { type: REFRESH_FILTERED_DATA, payload };\n};\n\nconst refreshShownData = payload => ({ type: REFRESH_SHOWN_DATA, payload });\nconst toggleVirtualTable = payload => ({ type: TOGGLE_VIRTUAL_TABLE, payload });\n\nexport {\n  refreshData,\n  deleteItem,\n  selectItem,\n  refreshFilterConfig,\n  refreshFilteredData,\n  refreshShownData,\n  toggleVirtualTable,\n};\n","export const REFRESH_DATA = 'REFRESH_DATA';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const SELECT_ITEM = 'SELECT_ITEM';\nexport const FILTERS_CONFIG = 'FILTERS_CONFIG';\nexport const REFRESH_FILTERED_DATA = 'REFRESH_FILTERED_DATA';\nexport const REFRESH_SHOWN_DATA = 'REFRESH_SHOWN_DATA';\nexport const TOGGLE_VIRTUAL_TABLE = 'TOGGLE_VIRTUAL_TABLE';\n","const dataToCSVPreparation = data => {\n  const arr = data.map(\n    ({\n      index,\n      id,\n      company,\n      url,\n      foundedYear,\n      founder,\n      fundingTotal,\n      status,\n      geo,\n      businessTypes,\n    }) => {\n      const categories = businessTypes.reduce(\n        (accumulator, currentValue) => `${accumulator} ${currentValue},`,\n        ''\n      );\n      const num = n =>\n        n.toLocaleString('ru-RU', {\n          maximumFractionDigits: 2,\n          minimumFractionDigits: 2,\n        });\n      return {\n        index,\n        id,\n        company,\n        url,\n        foundedYear,\n        founder,\n        fundingTotal,\n        categories,\n        status,\n        latitude: num(geo.latitude),\n        longitude: num(geo.longitude),\n      };\n    }\n  );\n  return arr;\n};\n\nexport default dataToCSVPreparation;\n","export const BUSINESS_TYPES = ['Games', 'IT', 'Media', 'Medicine', 'Tourism'];\nexport const COMPANY_STATUS = ['operating', 'closed'];\nexport const MAX_YEAR = new Date().getFullYear();\nexport const MIN_YEAR = MAX_YEAR - 10;\n\nexport const MIN_INVEST_SUM = 5;\nexport const MAX_INVEST_SUM = 5000;\n\nexport const HEAD_CELLS = [\n  { id: 'index', label: '№', isVisible: true },\n  { id: 'icon', label: 'icon', isVisible: true },\n  { id: 'company', label: 'Company', isVisible: true },\n  { id: 'foundedYear', label: 'Founded in', isVisible: true },\n  { id: 'founder', label: 'Founder', isVisible: true },\n  { id: 'fundingTotal', label: 'Funding total, USD * 10^3', isVisible: true },\n  { id: 'businessTypes', label: 'Business category', isVisible: true },\n  { id: 'status', label: 'Status', isVisible: true },\n  { id: 'geo', label: 'Geo location', isVisible: true },\n];\n","import {\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM,\n  MIN_YEAR,\n  MAX_YEAR,\n  BUSINESS_TYPES,\n  HEAD_CELLS,\n} from './data-generator-for';\n\nexport const SETTINGS = {\n  itemHeight: 40,\n  amount: 25,\n  tolerance: 3,\n  minIndex: 0,\n  maxIndex: 1999,\n  startIndex: 3,\n};\n\nexport const ROW_NUMBER = 1000;\n\nexport const SORT_CONFIG = {\n  orderBy: 'index',\n  index: {\n    sortDirection: 'asc',\n  },\n  company: {\n    sortDirection: 'asc',\n    searchValue: '',\n  },\n  foundedYear: {\n    sortDirection: 'asc',\n    searchRange: [MIN_YEAR, MAX_YEAR],\n  },\n  founder: {\n    sortDirection: 'asc',\n    searchValue: '',\n  },\n  fundingTotal: {\n    sortDirection: 'asc',\n    searchRange: [MIN_INVEST_SUM, MAX_INVEST_SUM],\n  },\n  businessTypes: {\n    sortDirection: 'asc',\n    categories: Array(BUSINESS_TYPES.length).fill(false),\n  },\n  status: {\n    isShowOnlyOperating: false,\n    statusToShow: 'all',\n  },\n  searchByAllStr: '',\n  columnConfig: HEAD_CELLS,\n};\n\nexport const DATAGRID_SORT_CONFIG = 'DATAGRID_SORT_CONFIG';\n","import { DATAGRID_SORT_CONFIG } from '../constantas/settings';\n\nconst refreshLS = configure => {\n  localStorage.removeItem(DATAGRID_SORT_CONFIG);\n  localStorage.setItem(DATAGRID_SORT_CONFIG, JSON.stringify(configure));\n};\n\nexport default refreshLS;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  IconButton,\n  Tooltip,\n  Popover,\n  FormControl,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { refreshData } from '../actions';\nimport refreshLS from '../utils/save-in-LS';\n\nconst useStyles = makeStyles(theme => ({\n  columnToggler: {\n    padding: 5,\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    backgroundColor: theme.palette.background.default,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: theme.palette.primary.main,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.1), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  popover: {\n    '& .MuiPopover-paper': {\n      padding: 10,\n    },\n  },\n}));\n\nconst ConnectedColumnToggle = props => {\n  const styles = useStyles();\n  const { filterConfig, refreshData } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const btnId = open ? 'Column viewing toggle' : undefined;\n\n  const handleChange = idCurrent => () => {\n    const newCells = filterConfig.columnConfig.map(item => {\n      const { id, isVisible } = item;\n      return id === idCurrent ? { ...item, isVisible: !isVisible } : item;\n    });\n    const newConfig = { ...filterConfig, columnConfig: newCells };\n    refreshLS(newConfig);\n    refreshData({ filterConfig: newConfig });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Column viewing toggle\">\n        <IconButton\n          aria-label=\"Column viewing toggle\"\n          className={styles.columnToggler}\n          onClick={handleClick}\n          aria-describedby={btnId}\n        >\n          <MoreVertIcon />\n        </IconButton>\n      </Tooltip>\n      <Popover\n        disableScrollLock\n        id={btnId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'right',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        className={styles.popover}\n      >\n        <FormControl component=\"fieldset\" className={styles.formControl}>\n          <FormGroup>\n            {filterConfig.columnConfig.map(({ id, label, isVisible }) => {\n              return label !== 'Company' ? (\n                <FormControlLabel\n                  key={label}\n                  control={\n                    <Checkbox\n                      checked={isVisible}\n                      onChange={handleChange(id)}\n                      value={label}\n                      color=\"default\"\n                      checkedIcon={<span className={clsx(styles.icon, styles.checkedIcon)} />}\n                      icon={<span className={styles.icon} />}\n                      inputProps={{ 'aria-label': label }}\n                    />\n                  }\n                  label={label}\n                />\n              ) : null;\n            })}\n          </FormGroup>\n        </FormControl>\n      </Popover>\n    </>\n  );\n};\nConnectedColumnToggle.defaultProps = {\n  selected: [],\n  filteredData: [],\n};\n\nConnectedColumnToggle.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      investSum: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nconst mapStateToProps = ({ filterConfig }) => ({\n  filterConfig,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst ColumnToggle = connect(mapStateToProps, mapDispatchToProps)(ConnectedColumnToggle);\n\nexport default ColumnToggle;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CsvDownloader from 'react-csv-downloader';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { Toolbar, Typography, IconButton, Tooltip } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { selectItem, refreshData } from '../../actions';\nimport dataToCSVPreparation from '../../utils/data-to-CSV-preparation';\nimport ColumnToggle from '../column-toggle';\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    height: 100,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  description: {\n    color: theme.palette.primary.main,\n    maxWidth: 400,\n    '& *': {\n      paddingBottom: 10,\n      display: 'block',\n    },\n  },\n  download: {\n    padding: '5px 5px 0',\n  },\n}));\n\nconst ConnectedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { selected, filteredData, handleDelete } = props;\n  const numSelected = selected.length;\n  const [csvData, setCsvData] = useState(dataToCSVPreparation(filteredData));\n\n  useEffect(() => {\n    setCsvData(dataToCSVPreparation(filteredData));\n  }, [filteredData, selected]);\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography color=\"primary\" variant=\"subtitle1\" className={classes.description}>\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <div className={classes.description}>\n          <Typography variant=\"h3\" id=\"tableTitle\">\n            StartUp Investments\n          </Typography>\n          <Typography variant=\"body2\">\n            Information about startup companies and investment\n          </Typography>\n        </div>\n      )}\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={handleDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div className={classes.tools}>\n          <Tooltip title=\"download CSV\">\n            <IconButton aria-label=\"download CSV\" className={classes.download}>\n              <CsvDownloader datas={csvData} filename=\"csvData.csv\" separator=\";\">\n                <GetAppIcon />\n              </CsvDownloader>\n            </IconButton>\n          </Tooltip>\n          <ColumnToggle />\n        </div>\n      )}\n    </Toolbar>\n  );\n};\nConnectedTableToolbar.defaultProps = {\n  selected: [],\n  filteredData: [],\n};\n\nConnectedTableToolbar.propTypes = {\n  selected: PropTypes.arrayOf(PropTypes.string),\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      investSum: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nconst mapStateToProps = ({ selected, filteredData }) => ({\n  selected,\n  filteredData,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectItem: data => dispatch(selectItem(data)),\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst TableToolbar = connect(mapStateToProps, mapDispatchToProps)(ConnectedTableToolbar);\n\nexport default TableToolbar;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { FormControlLabel, FormGroup, Switch } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  swicther: {\n    position: 'absolute',\n    top: 30,\n    right: 25,\n    zIndex: 10,\n    '& span': {\n      fontSize: 16,\n    },\n  },\n});\n\nconst Switcher = ({ checked, toggleChecked }) => {\n  const styles = useStyles();\n  return (\n    <FormGroup className={styles.swicther}>\n      <FormControlLabel\n        control={<Switch size=\"small\" checked={checked} onChange={toggleChecked} color=\"primary\" />}\n        label=\"Virtual Scroller\"\n        labelPlacement=\"start\"\n      />\n    </FormGroup>\n  );\n};\n\nexport default Switcher;\n","const getData = (offset, limit, minIndex, initData) => {\n  const start = Math.max(minIndex, offset);\n  const end = Math.min(offset + limit - 1, initData.length);\n  const data = initData.slice(start, end);\n  return data;\n};\n\nexport default getData;\n","const descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst stableSort = (array, comparator) => {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n};\n\nexport { getComparator, stableSort };\n","const toggleStatus = (isSelected, filteredData, refreshFilteredData, refreshLS, config) => {\n  console.log('isSelected: ', isSelected);\n  let newData = [];\n  if (isSelected) {\n    console.log('isSelected - true: ');\n    filteredData.forEach(el => {\n      if (el.status === 'operating') {\n        newData.push(el);\n      }\n    });\n  } else {\n    newData = filteredData.slice();\n  }\n  // refreshFilteredData({ filteredData: newData });\n  const newConfig = {\n    ...config,\n    status: { isShowOnlyOperating: isSelected, statusToShow: isSelected ? 'operating' : 'all' },\n  };\n  refreshLS(newConfig);\n  return newData;\n};\n\nexport default toggleStatus;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport { Tooltip } from '@material-ui/core';\n\nimport { refreshData } from '../actions';\nimport { DATAGRID_SORT_CONFIG } from '../constantas/settings';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: 20,\n    height: 25,\n    '&:hover': {\n      backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n      backgroundColor: theme.palette.secondary.light,\n      '& svg': {\n        fill: theme.palette.background.default,\n      },\n    },\n  },\n}));\n\nconst ConnectedSimpleToggleButton = ({ toggleStatus, refreshData, filterConfig }) => {\n  const styles = useStyles();\n\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n  const isSelected = config.status.isShowOnlyOperating;\n\n  const handleSelect = () => {\n    toggleStatus(!isSelected);\n    refreshData({\n      filterConfig: {\n        ...filterConfig,\n        status: {\n          isShowOnlyOperating: isSelected,\n          statusToShow: isSelected ? 'operating' : 'all',\n        },\n      },\n    });\n  };\n  return (\n    <Tooltip\n      title={isSelected ? 'Show all' : 'Show only operating'}\n      aria-label=\"Show company status\"\n    >\n      <ToggleButton\n        value=\"check\"\n        selected={isSelected}\n        className={styles.button}\n        onChange={handleSelect}\n      >\n        <CheckIcon />\n      </ToggleButton>\n    </Tooltip>\n  );\n};\nconst mapStateToProps = ({ filterConfig }) => ({ filterConfig });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: data => dispatch(refreshData(data)),\n  };\n};\n\nconst SimpleToggleButton = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedSimpleToggleButton);\n\nexport default SimpleToggleButton;\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-shadow */\n/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TableSortLabel, Checkbox } from '@material-ui/core';\n\nimport { refreshData, selectItem, refreshShownData, refreshFilteredData } from '../../actions';\nimport { DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { HEAD_CELLS } from '../../constantas/data-generator-for';\nimport refreshLS from '../../utils/save-in-LS';\nimport toggleStatus from '../../utils/filters';\nimport ToggleButton from '../toggle-button';\n\nconst ConnectedTableHeader = props => {\n  const {\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n    selectItem,\n    scrollLeft,\n    filteredData,\n    refreshFilteredData,\n    filterConfig,\n  } = props;\n\n  const useStyles = makeStyles(theme => ({\n    head: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n    },\n    head2: {\n      position: 'absolute',\n      top: 0,\n      display: 'flex',\n      height: 60,\n      zIndex: 2,\n      '& div': {\n        textAlign: 'center',\n        lineHeight: '50px',\n        borderRight: `1px solid ${theme.palette.secondary.light}`,\n        borderTop: `1px solid ${theme.palette.secondary.light}`,\n        '&:last-child': {\n          borderRight: 'none',\n        },\n      },\n      '& .MuiTableSortLabel-active': {\n        '& .MuiTableSortLabel-icon': {\n          fill: theme.palette.primary.main,\n        },\n      },\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n    checkbox: {\n      minWidth: 50,\n      width: 50,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      padding: 0,\n    },\n    wrap: {\n      border: 'none',\n    },\n    cell: {\n      minWidth: 200,\n      width: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      zIndex: 2,\n    },\n    index: {\n      minWidth: 45,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    icon: {\n      width: 55,\n      minWidth: 50,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    foundedYear: {\n      width: 120,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    fundingTotal: {\n      width: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n    },\n    status: {\n      minWidth: 100,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      '& .Mui-selected': {\n        backgroundColor: theme.palette.primary.light,\n        '& svg': {\n          fill: theme.palette.background.default,\n        },\n      },\n    },\n    company: {\n      minWidth: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      zIndex: 11,\n    },\n    stickyColumn: {\n      position: 'absolute',\n      top: 0,\n      left: scrollLeft,\n      width: 200,\n      height: 60,\n      backgroundColor: theme.palette.background.default,\n      boxShadow: theme.shadows[1],\n      zIndex: 11,\n    },\n    sortLabel: {\n      '& svg': {\n        opacity: 0.3,\n        '&:hover': {\n          opacity: 1,\n        },\n      },\n    },\n  }));\n  const columnConfig = (filterConfig.columnConfig) ? (filterConfig.columnConfig) : HEAD_CELLS;\n\n  const styles = useStyles();\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n  const renderCells =\n    scrollLeft < 150\n      ? [...columnConfig]\n      : [...columnConfig, { id: 'companySticky', label: 'Company', isVisible: true }];\n\n  const handleSort = property => () => {\n    onRequestSort(property);\n  };\n  // TODO при изменении shownData количество выбранных должно изменить тоже\n\n  const handleSelectAllClick = ({ target: { checked } }) => {\n    if (checked) {\n      const allSelected = filteredData.map(n => n.id);\n      selectItem({ selected: allSelected });\n    } else {\n      selectItem({ selected: [] });\n    }\n  };\n  const handleStatus = isSelected => {\n    const newData = toggleStatus(isSelected, filteredData, refreshFilteredData, refreshLS, config);\n    const newConfig = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n    refreshData({ filterConfig: newConfig });\n    refreshFilteredData({ filteredData: newData });\n  };\n\n  return (\n    <div className={styles.head}>\n      <div className={styles.head2}>\n        <div className={styles.checkbox}>\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === filteredData.length}\n            onChange={handleSelectAllClick}\n            inputProps={{ 'aria-label': 'select all' }}\n          />\n        </div>\n        {renderCells.map(({ id, label, isVisible }) => {\n          const divClass =\n            id === 'icon'\n              ? styles.icon\n              : id === 'index'\n              ? styles.index\n              : id === 'foundedYear'\n              ? styles.foundedYear\n              : id === 'status'\n              ? styles.status\n              : id === 'fundingTotal'\n              ? styles.fundingTotal\n              : id === 'company'\n              ? styles.company\n              : id === 'companySticky'\n              ? styles.stickyColumn\n              : styles.cell;\n          return (\n            <div key={id} className={styles.wrap}>\n              {isVisible ? (\n                <div className={divClass}>\n                  {['icon', 'geo'].includes(id) ? (\n                    label\n                  ) : id === 'status' ? (\n                    <>\n                      {`${label} `}\n                      <ToggleButton toggleStatus={handleStatus} />\n                    </>\n                  ) : (\n                    <TableSortLabel\n                      active={orderBy === id}\n                      direction={orderBy === id ? order : 'asc'}\n                      onClick={handleSort(id)}\n                      className={styles.sortLabel}\n                    >\n                      {label}\n                      {orderBy === id ? (\n                        <span className={styles.visuallyHidden}>\n                          {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                        </span>\n                      ) : null}\n                    </TableSortLabel>\n                  )}\n                </div>\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nConnectedTableHeader.defaultProps = {\n  numSelected: 0,\n  onRequestSort: () => {},\n  order: 'asc',\n  orderBy: '',\n  rowCount: 0,\n  scrollLeft: 0,\n  filteredData: [],\n};\n\nConnectedTableHeader.propTypes = {\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  scrollLeft: PropTypes.number,\n  filteredData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      index: PropTypes.number,\n      icon: PropTypes.string,\n      company: PropTypes.string,\n      url: PropTypes.string,\n      foundedYear: PropTypes.number,\n      founder: PropTypes.string,\n      fundingTotal: PropTypes.number,\n      status: PropTypes.string,\n      geo: PropTypes.shape({\n        latitude: PropTypes.number,\n        longitude: PropTypes.number,\n      }),\n      businessTypes: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nconst mapStateToProps = ({ filteredData, filterConfig }) => ({ filteredData, filterConfig });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n    selectItem: selected => dispatch(selectItem(selected)),\n    refreshShownData: data => dispatch(refreshShownData(data)),\n    refreshFilteredData: data => dispatch(refreshFilteredData(data)),\n  };\n};\n\nconst TableHeader = connect(mapStateToProps, mapDispatchToProps)(ConnectedTableHeader);\n\nexport default TableHeader;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { SETTINGS } from '../../constantas/settings';\n\nconst rowStyles = makeStyles(theme => ({\n  row: {\n    display: 'flex',\n    height: SETTINGS.itemHeight,\n    position: 'relative',\n  },\n  checkbox: {\n    minWidth: 50,\n    borderBottom: `1px solid ${theme.palette.secondary.light}`,\n    borderRight: `1px solid ${theme.palette.secondary.light}`,\n  },\n  checkboxChecked: {\n    '& svg': {\n      fill: theme.palette.primary.main,\n    },\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottom: `1px solid ${theme.palette.secondary.light}`,\n    borderRight: `1px solid ${theme.palette.secondary.light}`,\n  },\n  textVerCenter: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(1),\n    borderBottom: `1px solid ${theme.palette.secondary.light}`,\n    borderRight: `1px solid ${theme.palette.secondary.light}`,\n  },\n  cell: {\n    minWidth: 200,\n    width: 200,\n    height: SETTINGS.itemHeight,\n    wordWrap: 'break-word',\n    backgroundColor: theme.palette.background.default,\n    '&:lastChild': {\n      borderRight: 'none',\n    },\n  },\n  index: {\n    minWidth: 45,\n  },\n  icon: {\n    minWidth: 55,\n  },\n  img: {\n    borderRadius: '50%',\n  },\n  foundedYear: {\n    minWidth: 120,\n    justifyContent: 'flex-end',\n    height: SETTINGS.itemHeight,\n  },\n  status: {\n    minWidth: 100,\n    height: SETTINGS.itemHeight,\n  },\n  fundingTotal: {\n    minWidth: 200,\n    height: SETTINGS.itemHeight,\n    justifyContent: 'flex-end',\n  },\n  link: {\n    color: theme.palette.info.main.dark,\n  },\n  highlightedText: {\n    backgroundColor: theme.palette.secondary.light,\n    borderRadius: 4,\n    padding: '0 5px',\n  },\n  cellSelected: {\n    backgroundColor: '#FFC9CC',\n    color: '#000000',\n  },\n  company: {\n    minWidth: 200,\n    height: 40,\n    wordWrap: 'break-word',\n  },\n  stickyColumn: {\n    position: 'absolute',\n    top: 0,\n    width: 200,\n    height: SETTINGS.itemHeight,\n    boxShadow: theme.shadows[1],\n    wordWrap: 'break-word',\n    zIndex: 1,\n  },\n  whiteBg: {\n    backgroundColor: theme.palette.background.default,\n  },\n}));\n\nexport default rowStyles;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport clsx from 'clsx';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport theme from '../../themes/themeLight';\nimport { selectItem } from '../../actions';\nimport rowStyles from './row-styles';\nimport { HEAD_CELLS } from '../../constantas/data-generator-for';\n\nconst coordinateFormatting = n =>\n  n.toLocaleString('ru-RU', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n\nconst ShowCoors = ({ coors, geoClass }) => {\n  const lat = coordinateFormatting(coors.latitude);\n  const long = coordinateFormatting(coors.longitude);\n  return (\n    <>\n      <span>[</span>\n      <span className={geoClass}>{lat}</span>\n      <span>;&#8194;</span>\n      <span className={geoClass}>{long}</span>\n      <span>]</span>\n    </>\n  );\n};\n\nShowCoors.defaultProps = {\n  geoClass: '',\n  coors: { latitude: 0, longitude: 0 },\n};\n\nShowCoors.propTypes = {\n  geoClass: PropTypes.string,\n  coors: PropTypes.shape({ latitude: PropTypes.number, longitude: PropTypes.number }),\n};\n\nconst ConnectedRowTemplate = props => {\n  const { item, selected, selectItem, scrollLeft, filterConfig } = props;\n  const styles = rowStyles(theme);\n  const {\n    index,\n    id,\n    icon,\n    company,\n    url,\n    foundedYear,\n    founder,\n    fundingTotal,\n    status,\n    geo,\n    businessTypes,\n  } = item;\n  const isSelected = name => selected.indexOf(name) !== -1;\n  const [isItemSelected, setIsItemSelected] = useState(false);\n  // console.log('filterConfig.columnConfig: ', filterConfig.columnConfig)\n\n  const renderCells = filterConfig.columnConfig ? filterConfig.columnConfig : HEAD_CELLS;\n\n  useEffect(() => {\n    setIsItemSelected(isSelected(id));\n  }, [selected]);\n\n  const labelId = `enhanced-table-checkbox-${index}`;\n\n  const handleSelect = () => {\n    const selectedItems = isItemSelected ? selected.filter(el => el !== id) : [...selected, id];\n\n    setIsItemSelected(!isItemSelected);\n    selectItem({ selected: selectedItems });\n  };\n\n  return (\n    <div className={styles.row} key={id}>\n      <div\n        className={clsx(styles.center, styles.checkbox, {\n          [styles.cellSelected]: isItemSelected,\n        })}\n      >\n        <Checkbox\n          checked={isItemSelected}\n          inputProps={{ 'aria-labelledby': labelId }}\n          onChange={handleSelect}\n          color=\"secondary\"\n          className={isItemSelected ? styles.checkboxChecked : null}\n        />\n      </div>\n      {filterConfig.columnConfig[0].isVisible ? (\n        <div\n          className={clsx(styles.index, styles.center, { [styles.cellSelected]: isItemSelected })}\n        >\n          {index + 1}\n        </div>\n      ) : null}\n      {filterConfig.columnConfig[1].isVisible ? (\n        <div\n          className={clsx(styles.icon, styles.center, { [styles.cellSelected]: isItemSelected })}\n        >\n          <img src={icon} alt={company} className={styles.img} />\n        </div>\n      ) : null}\n      {renderCells[2].isVisible ? (\n        <div\n          className={clsx(styles.company, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n            [styles.whiteBg]: !isItemSelected,\n          })}\n        >\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.link}>\n            {company}\n          </a>\n        </div>\n      ) : null}\n      {renderCells[2].isVisible && scrollLeft > 150 ? (\n        <div\n          style={{ left: scrollLeft }}\n          className={clsx(styles.stickyColumn, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n            [styles.whiteBg]: !isItemSelected,\n          })}\n        >\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={styles.link}>\n            {company}\n          </a>\n        </div>\n      ) : null}\n      {renderCells[3].isVisible ? (\n        <div\n          className={clsx(styles.foundedYear, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {foundedYear}\n        </div>\n      ) : null}\n      {renderCells[4].isVisible ? (\n        <div\n          className={clsx(styles.cell, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {founder}\n        </div>\n      ) : null}\n      {renderCells[5].isVisible ? (\n        <div\n          className={clsx(styles.fundingTotal, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {fundingTotal.toLocaleString()}\n        </div>\n      ) : null}\n      {renderCells[6].isVisible ? (\n        <div\n          className={clsx(styles.cell, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {businessTypes.map((category, i) => (\n            <span key={`${id}-${category}-${i}`}>\n              |&nbsp;\n              <span className={styles.highlightedText}>{category === '' ? null : category}</span>\n              {i === businessTypes.length - 1 ? ' |' : null}\n            </span>\n          ))}\n        </div>\n      ) : null}\n      {renderCells[7].isVisible ? (\n        <div\n          className={clsx(styles.status, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          {status}\n        </div>\n      ) : null}\n      {renderCells[8].isVisible ? (\n        <div\n          className={clsx(styles.cell, styles.textVerCenter, {\n            [styles.cellSelected]: isItemSelected,\n          })}\n        >\n          <ShowCoors coors={geo} geoClass={styles.highlightedText} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ selected, filterConfig }) => ({ selected, filterConfig });\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectItem: data => dispatch(selectItem(data)),\n  };\n};\nconst RowTemplate = connect(mapStateToProps, mapDispatchToProps)(ConnectedRowTemplate);\nexport default RowTemplate;\n","function draw() {\n  // grain is basically level of detail. higher = finer.\n  const grain = 5;\n  let blockout = Math.random();\n  const canvas = document.createElement('CANVAS');\n  canvas.width = 30;\n  canvas.height = 30;\n  document.body.append(canvas);\n  const w = 30;\n  const h = 30;\n  const colorArray = [];\n  let pokeOut;\n  let dataURI;\n  if (canvas.getContext) {\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillStyle = 'transparent';\n    ctx.fillRect(0, 0, w, h);\n\n    const randomRGB = (min, max) => {\n      const minX = Math.ceil(min);\n      const maxX = Math.floor(max);\n      for (let i = 0; i < 3; i += 1) {\n        colorArray.push(Math.floor(Math.random() * (maxX - minX)) + minX);\n      }\n    };\n\n    pokeOut = () => {\n      randomRGB(0, 255);\n      let posX = 0;\n      let posY = 0;\n      let startFillRed = colorArray[0];\n      let startFillGreen = colorArray[1];\n      let startFillBlue = colorArray[2];\n      const colorRange = 5;\n      ctx.fillStyle = `rgb(${startFillRed},${startFillGreen},${startFillBlue})`;\n\n      for (let y = 0; y < grain; y += 1) {\n        for (let x = 0; x < grain; x += 1) {\n          if (blockout < 0.4) {\n            ctx.fillRect(posX, posY, w / grain, h / grain);\n            ctx.fillRect(w - posX - w / grain, posY, w / grain, h / grain);\n            posX += w / grain;\n          } else {\n            startFillRed -= colorRange;\n            startFillGreen += colorRange;\n            startFillBlue += colorRange;\n            ctx.fillStyle = `rgb(${startFillRed},${startFillGreen},${startFillBlue})`;\n            posX += w / grain;\n          }\n          blockout = Math.random();\n        }\n        posY += h / grain;\n        posX = 0;\n      }\n\n      dataURI = canvas.toDataURL();\n      canvas.remove();\n    };\n  }\n  pokeOut();\n  return dataURI;\n}\n\nexport default draw;\n","import dataGenerator from './data-generator';\nimport { ROW_NUMBER } from '../constantas/settings';\nimport {\n  BUSINESS_TYPES,\n  COMPANY_STATUS,\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM,\n} from '../constantas/data-generator-for';\n\nconst data = (n, generator, bussinessTypes, companyStatus, minInvestSum, maxInvestSum) => {\n  const arr = [];\n  for (let i = 0; i < n; i += 1) {\n    arr.push({\n      ...generator(bussinessTypes, companyStatus, minInvestSum, maxInvestSum),\n      ...{ index: i },\n    });\n  }\n  return arr;\n};\n\nexport default data(\n  ROW_NUMBER,\n  dataGenerator,\n  BUSINESS_TYPES,\n  COMPANY_STATUS,\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM\n);\n","import Fakerator from 'fakerator';\nimport drawIcon from './icon-generator';\n\nconst dataGenerator = (bussinessTypes, companyStatus, minInvestSum, maxInvestSum) => {\n  const fakerator = Fakerator('en-EN');\n\n  fakerator.seed(Math.floor(Math.random() * 10000000));\n\n  const id = fakerator.random.masked('aaa-AAA_999999:*');\n  const icon = drawIcon();\n  const company = fakerator.company.name();\n  const url = `https://${fakerator.random.string(10)}.com`;\n  const foundedYear = fakerator.date.past(10, new Date()).getFullYear();\n  const founder = fakerator.names.name();\n  const fundingTotal = fakerator.random.number(minInvestSum, maxInvestSum);\n  const stillAlive = fakerator.random.boolean();\n  const status = stillAlive ? companyStatus[0] : companyStatus[1];\n  const geo = fakerator.address.geoLocation();\n  const businessTypes = [];\n\n  while (businessTypes.length === 0) {\n    for (let j = 0; j < 2; j += 1) {\n      const k = fakerator.random.number(0, 5);\n      const value = bussinessTypes[k];\n      if (value !== undefined && !businessTypes.includes(value)) {\n        businessTypes.push(value);\n      }\n    }\n  }\n  return {\n    id,\n    icon,\n    company,\n    url,\n    foundedYear,\n    founder,\n    fundingTotal,\n    status,\n    geo,\n    businessTypes,\n  };\n};\n\nexport default dataGenerator;\n","import {\n  REFRESH_DATA,\n  SELECT_ITEM,\n  FILTERS_CONFIG,\n  REFRESH_FILTERED_DATA,\n  REFRESH_SHOWN_DATA,\n  TOGGLE_VIRTUAL_TABLE,\n} from './constantas/action-types';\nimport data from './utils/data';\nimport { SORT_CONFIG } from './constantas/settings';\n\nconst initialState = {\n  initialData: data,\n  filteredData: data,\n  shownData: [],\n  selected: [],\n  filterConfig: SORT_CONFIG,\n  isVirtual: true,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REFRESH_DATA:\n      return { ...state, ...action.payload };\n    case SELECT_ITEM:\n      return { ...state, ...action.payload };\n    case FILTERS_CONFIG:\n      return { ...state, ...action.payload };\n    case REFRESH_FILTERED_DATA:\n      return { ...state, ...action.payload };\n    case REFRESH_SHOWN_DATA:\n      return { ...state, ...action.payload };\n    case TOGGLE_VIRTUAL_TABLE:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// import {\n//   DELETE_ITEM,\n//   REFRESH_DATA,\n//   REFRESH_FILTERED_DATA,\n//   REFRESH_SHOWN_DATA,\n// } from './constantas/action-types';\n// Redux can hold business logic inside its own layer (middleware)\n//  Looks like we want to check the action payload (and the title property) before the action is passed to the reducer. There should be a way for tapping into the application's flow. And guess what, that's exactly what a Redux middleware does.\n\nconst middleware = () => {\n  return next => {\n    return action => {\n      // console.log('action: ', action);\n      // // console.log('store: ', store);\n      // if (action.type === REFRESH_FILTERED_DATA) {\n      //   console.log('action type REFRESH_FILTERED_DATA', action.payload);\n      // return store.dispatch({ type: REFRESH_FILTERED_DATA });\n      // }\n      return next(action);\n    };\n  };\n};\n\nexport default middleware;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, storeEnhancers(applyMiddleware(middleware)));\n\nexport default store;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useState, createRef, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { refreshData, selectItem } from '../../actions';\nimport getData from '../../utils/get-data';\nimport { SETTINGS, DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { getComparator, stableSort } from '../../utils/sort-functions';\nimport refreshLS from '../../utils/save-in-LS';\nimport TableHeader from './table-head';\nimport RowTemplate from './row-template';\nimport store from '../../store';\n\nconst setInitialState = settings => {\n  const { itemHeight, amount, tolerance, minIndex, maxIndex, startIndex } = settings;\n  const viewportHeight = amount * itemHeight;\n  const totalHeight = (maxIndex - minIndex + 1) * itemHeight;\n  const toleranceHeight = tolerance * itemHeight;\n  const bufferHeight = viewportHeight + 2 * toleranceHeight;\n  const bufferedItems = amount + 2 * tolerance;\n  const itemsAbove = startIndex - tolerance - minIndex;\n  const topPaddingHeight = itemsAbove * itemHeight + 60;\n  const bottomPaddingHeight = totalHeight - topPaddingHeight;\n  const initialPosition = topPaddingHeight + toleranceHeight;\n  return {\n    settings,\n    viewportHeight,\n    totalHeight,\n    toleranceHeight,\n    bufferHeight,\n    bufferedItems,\n    topPaddingHeight,\n    bottomPaddingHeight,\n    initialPosition,\n  };\n};\n\nconst ConnectedVirtualTable = props => {\n  const useStyles = makeStyles({\n    virtScroller: {\n      height: 900,\n      overflow: 'auto',\n      minHeight: 500,\n    },\n  });\n  const styles = useStyles();\n\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n\n  const { selected, shownData, filteredData, isVirtual } = props;\n  const [state, setState] = useState(setInitialState(SETTINGS));\n  const [orderBy, setOrderBy] = useState(config.orderBy);\n  const [order, setOrder] = useState(config[orderBy].sortDirection);\n\n  const [scrollVert, setScrollVert] = useState(0);\n  const [scrollLeftState, setScrollLeftState] = useState(0);\n  const [shownDataState, setShownDataState] = useState(isVirtual ? shownData : filteredData);\n\n  const viewportElement = createRef();\n  const { itemHeight, minIndex, tolerance } = SETTINGS;\n\n  const runScroller = ({ target }) => {\n    const { totalHeight, toleranceHeight, bufferedItems } = state;\n\n    const { scrollTop, scrollLeft } = target;\n    setScrollLeftState(scrollLeft);\n\n    if (scrollVert !== viewportElement.current.scrollTop) {\n      const index = minIndex + Math.floor((scrollTop - toleranceHeight) / itemHeight);\n      const data = getData(index, bufferedItems, minIndex, filteredData);\n      const topPaddingHeight = Math.max((index - minIndex) * itemHeight, 0) + 60;\n      const bottomPaddingHeight = Math.max(\n        totalHeight - topPaddingHeight - data.length * itemHeight,\n        0\n      );\n      props.refreshData({ shownData: data });\n      setState({ ...state, topPaddingHeight, bottomPaddingHeight });\n    }\n\n    setScrollVert(viewportElement.current.scrollTop);\n  };\n\n  const handleRequestSort = property => {\n    const isAsc = orderBy === property && order === 'asc';\n\n    const newOrder = isAsc ? 'desc' : 'asc';\n    setOrder(newOrder);\n    setOrderBy(property);\n    const sortedData = stableSort(filteredData, getComparator(newOrder, property));\n\n    const totalHeight = viewportElement.current.clientHeight;\n    const amount = Math.ceil(totalHeight / itemHeight);\n    const data = getData(0, amount + tolerance, 0, sortedData);\n\n    config.orderBy = property;\n    config[property].sortDirection = newOrder;\n    refreshLS(config);\n\n    props.refreshData({ shownData: data });\n  };\n  store.subscribe(() => {\n    const data = store.getState().filteredData;\n    setShownDataState(data);\n  });\n\n  useEffect(() => {\n    const data = getData(0, 25, 0, filteredData);\n    props.refreshData({ shownData: data });\n    if (!state.initialPosition) {\n      runScroller({ target: { scrollTop: 0 } });\n    }\n  }, [shownDataState, filteredData]);\n\n  const { topPaddingHeight, bottomPaddingHeight } = state;\n\n  return (\n    <div className={styles.virtScroller} ref={viewportElement} onScroll={runScroller}>\n      <TableHeader\n        numSelected={selected.length}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        rowCount={shownData.length}\n        scrollLeft={scrollLeftState}\n      />\n      <div style={{ height: topPaddingHeight }} />\n      {shownData.map(item => (\n        <RowTemplate item={item} key={item.id} scrollLeft={scrollLeftState} />\n      ))}\n      <div style={{ height: bottomPaddingHeight }} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ filteredData, shownData, selected }) => ({\n  filteredData,\n  shownData,\n  selected,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n    selectItem: selected => dispatch(selectItem(selected)),\n  };\n};\n\nconst VirtualTable = connect(mapStateToProps, mapDispatchToProps)(ConnectedVirtualTable);\n\nexport default VirtualTable;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { refreshData } from '../../actions';\nimport getData from '../../utils/get-data';\nimport { DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { getComparator, stableSort } from '../../utils/sort-functions';\nimport TableHeader from './table-head';\nimport RowTemplate from './row-template';\nimport refreshLS from '../../utils/save-in-LS';\n\nconst useStyles = makeStyles({\n  table: {\n    width: '100%',\n    minWidth: 300,\n    height: 900,\n    overflow: 'scroll',\n  },\n});\n\nconst ConnectedSimpleTable = props => {\n  const styles = useStyles();\n\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n\n  const { selected, filteredData, refreshData } = props;\n  const [orderBy, setOrderBy] = useState(config.orderBy);\n  const [order, setOrder] = useState(config[orderBy].sortDirection);\n  const [scrollLeftState, setScrollLeftState] = useState(0);\n\n  const runScroller = ({ target }) => {\n    const { scrollLeft } = target;\n    setScrollLeftState(scrollLeft);\n  };\n\n  useEffect(() => {\n    const data = getData(0, 25, 0, filteredData);\n    refreshData({ shownData: data });\n  }, [filteredData]);\n\n  const handleRequestSort = property => {\n    const isAsc = orderBy === property && order === 'asc';\n\n    const newOrder = isAsc ? 'desc' : 'asc';\n    setOrder(newOrder);\n    setOrderBy(property);\n    const sortedData = stableSort(filteredData, getComparator(order, orderBy));\n    refreshLS(config);\n    refreshData({ shownData: sortedData });\n  };\n\n  return (\n    <div className={styles.table} onScroll={runScroller}>\n      <TableHeader\n        numSelected={selected.length}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        rowCount={filteredData.length}\n        scrollLeft={scrollLeftState}\n      />\n      {filteredData.map(item => (\n        <RowTemplate item={item} key={item.id} scrollLeft={scrollLeftState} />\n      ))}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ initialData, filteredData, selected }) => ({\n  initialData,\n  filteredData,\n  selected,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: rows => dispatch(refreshData(rows)),\n  };\n};\n\nconst SimpleTable = connect(mapStateToProps, mapDispatchToProps)(ConnectedSimpleTable);\n\nexport default SimpleTable;\n\n// Preloader пока загружается\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\n\nimport { toggleVirtualTable, refreshData, refreshFilteredData } from '../../actions';\nimport TableToolbar from './table-toolbar';\nimport Switcher from '../switcher';\nimport VirtualTable from './table-virtual';\nimport SimpleTable from './table-simple';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    maxWidth: 1200,\n    minWidth: 400,\n    boxShadow: theme.shadows[3],\n  },\n}));\nconst ConnectedDataGrid = ({\n  isVirtual,\n  toggleVirtualTable,\n  selected,\n  refreshData,\n  initialData,\n}) => {\n  const classes = useStyles();\n  const [isVirtualChecked, setIsVirtualChecked] = React.useState(isVirtual);\n\n  const toggleChecked = () => {\n    setIsVirtualChecked(!isVirtualChecked);\n    toggleVirtualTable({ isVirtual: !isVirtual });\n  };\n\n  const handleDelete = () => {\n    const newArr = initialData.filter(el => !selected.includes(el.id));\n    refreshData({ initialData: newArr, selected: [] });\n    refreshData({ filteredData: newArr });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Switcher checked={isVirtualChecked} toggleChecked={toggleChecked} />\n      <TableToolbar handleDelete={handleDelete} />\n      {isVirtualChecked ? <VirtualTable /> : <SimpleTable />}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ isVirtual, initialData, selected }) => ({\n  isVirtual,\n  initialData,\n  selected,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleVirtualTable: data => dispatch(toggleVirtualTable(data)),\n    refreshData: data => dispatch(refreshData(data)),\n    refreshFilteredData: data => dispatch(refreshFilteredData(data)),\n  };\n};\n\nconst DataGrid = connect(mapStateToProps, mapDispatchToProps)(ConnectedDataGrid);\n\nexport default DataGrid;\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Radio } from '@material-ui/core';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    backgroundColor: theme.palette.background.default,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: theme.palette.primary.main,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n}));\nconst StyledRadio = props => {\n  const classes = useStyles();\n\n  return (\n    <Radio\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n};\n\nexport default StyledRadio;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\n// TODO проверь все файлы на prop-types\nimport React, { useEffect, useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Divider,\n  Button,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  Checkbox,\n  FormGroup,\n  InputBase,\n  RadioGroup,\n  Slider,\n  Input,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport clsx from 'clsx';\n\nimport { refreshFilteredData, refreshData } from '../../actions';\nimport StyledRadio from './styled-radio';\nimport {\n  BUSINESS_TYPES,\n  COMPANY_STATUS,\n  MIN_YEAR,\n  MAX_YEAR,\n  MIN_INVEST_SUM,\n  MAX_INVEST_SUM,\n} from '../../constantas/data-generator-for';\nimport { SORT_CONFIG, DATAGRID_SORT_CONFIG } from '../../constantas/settings';\nimport { getComparator, stableSort } from '../../utils/sort-functions';\nimport refreshLS from '../../utils/save-in-LS';\n\nconst useStyles = makeStyles(theme => ({\n  wrap: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    width: 300,\n    minWidth: 300,\n    height: 1000,\n    marginBottom: 40,\n    padding: 10,\n    marginRight: 10,\n    boxShadow: theme.shadows[3],\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '20px 0 20px',\n    '& div': {\n      height: 30,\n    },\n    '& h3': {\n      padding: 0,\n    },\n  },\n  filter: {\n    padding: '10 0',\n    marginBottom: 20,\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: 20,\n    },\n  },\n  title: {\n    fontSize: '1.2rem',\n    lineHeight: '1.2',\n    fontWeight: 'bold',\n    color: theme.palette.text.primary,\n    margin: '10px 0 10px',\n  },\n  icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    backgroundColor: theme.palette.background.default,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.secondary.light,\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: theme.palette.primary.main,\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    boxShadow: `inset 0 0 0 1px rgba(16,22,26,.1), inset 0 -1px 0 rgba(16,22,26,.1)`,\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: theme.palette.primary.light,\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    fontSize: '1rem',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    backgroundColor: fade(theme.palette.secondary.light, 0.25),\n    [theme.breakpoints.up('sm')]: {\n      width: 150,\n      '&:focus': {\n        backgroundColor: fade(theme.palette.secondary.light, 0.15),\n        width: 245,\n      },\n    },\n  },\n  inputHeader: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    backgroundColor: fade(theme.palette.secondary.light, 0.25),\n    [theme.breakpoints.up('sm')]: {\n      width: 150,\n      '&:focus': {\n        backgroundColor: fade(theme.palette.secondary.light, 0.15),\n        width: 190,\n      },\n    },\n  },\n  range: {\n    width: 240,\n    margin: '25px 20px 0',\n  },\n  inputs: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  input: {\n    width: 60,\n  },\n  fundInput: {\n    width: 85,\n  },\n}));\n// Алгоритм работы фильтра:\n// 1) изначально filteredData = initialData\n// 2) берем filterConfig, config = filterConfig,\n// 3) применяем по очереди фильтры соответсвенно config\n// 4) обновляем filteredData\n// 5) получаем shownData от filteredData\n// 6) слушаем изменения config\n// 7) записываем изменения config в filterConfig\n// 8) при появлении новых значений фильтров, повторям от шага 2 заново\nconst ConnectedFilters = props => {\n  // шаг 1) изначально filteredData = initialData\n  const { refreshFilteredData, initialData, filteredData, isVirtual, refreshData } = props;\n  const styles = useStyles();\n\n  // шаг 2) берем filterConfig, config = filterConfig,\n  const config = JSON.parse(localStorage.getItem(DATAGRID_SORT_CONFIG));\n  const [checkedCategories, setCheckedCategories] = useState([]);\n  let filteredDataAfterCheckboxes = filteredData.slice();\n  const [searchAll, setSearchAll] = useState('');\n  const [searchedCompany, setSearchedCompany] = useState('');\n  const [searchedFounder, setSearchedFounder] = useState('');\n  let status = config.status.statusToShow;\n  const [yearsRange, setYearsRange] = React.useState([MIN_YEAR, MAX_YEAR]);\n  const [fundRange, setFundRange] = React.useState([MIN_INVEST_SUM, MAX_INVEST_SUM]);\n  const checkedCategories1 = [];\n  const labels = [...COMPANY_STATUS, 'all'];\n\n  // подготовка значений для checkbox фильтрации\n  const categoryMap = new Map();\n  BUSINESS_TYPES.forEach((type, i) => {\n    categoryMap.set(type, config.businessTypes.categories[i]);\n    if (config.businessTypes.categories[i]) {\n      checkedCategories1.push(type);\n    }\n  });\n\n  // TODO не забудь вернуть 1000 строк!\n\n  const handleResetFilter = () => {\n    // шаг 7) записываем изменения config\n    refreshLS(SORT_CONFIG);\n    setCheckedCategories([]);\n  };\n\n  const handleCompanySearch = ({ target: { value } }) => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.company.toLowerCase().includes(value.toLowerCase())) {\n        newData.push(el);\n      }\n    });\n    config.company.searchValue = value;\n    setSearchedCompany(value);\n    // шаг 4) обновляем filteredData\n    refreshFilteredData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleFoundersSearch = ({ target: { value } }) => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.founder.toLowerCase().includes(value.toLowerCase())) {\n        newData.push(el);\n      }\n    });\n    config.founder.searchValue = value;\n    setSearchedFounder(value);\n    // шаг 4) обновляем filteredData\n    refreshFilteredData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleSearch = ({ target: { value } }) => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (\n        el.founder.toLowerCase().includes(value.toLowerCase()) ||\n        el.company.toLowerCase().includes(value.toLowerCase())\n      ) {\n        newData.push(el);\n      }\n    });\n    config.searchByAllStr = value;\n    setSearchAll(value);\n    // шаг 4) обновляем filteredData\n    refreshFilteredData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleCheckboxChange = ({ target }) => {\n    const { value, checked } = target;\n    categoryMap.set(value, checked);\n\n    const set = new Set(checkedCategories);\n    if (checked) {\n      set.add(value);\n    } else {\n      set.delete(value);\n    }\n\n    const typeIndex = BUSINESS_TYPES.indexOf(value);\n    config.businessTypes.categories[typeIndex] = checked;\n    const newArr = [...set];\n    setCheckedCategories(newArr);\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const handleStatusChange = ({ target: { value } }) => {\n    let newData = [];\n    if (value === 'all') {\n      newData = [...filteredDataAfterCheckboxes];\n    } else {\n      filteredDataAfterCheckboxes.forEach(el => {\n        if (el.status === value) {\n          newData.push(el);\n        }\n      });\n    }\n    config.status.statusToShow = value;\n    config.status.isShowOnlyOperating = value === 'operating';\n\n    // шаг 4) обновляем filteredData\n    refreshFilteredData({ filteredData: newData });\n    status = value;\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n    refreshData({ filterConfig: config });\n  };\n\n  const yearsRangeFilter = range => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.foundedYear >= range[0] && el.foundedYear <= range[1]) {\n        newData.push(el);\n      }\n    });\n    config.foundedYear.searchRange = range;\n\n    // шаг 4) обновляем filteredData\n    refreshFilteredData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n    setYearsRange(range);\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  const fundRangeFilter = range => {\n    const newData = [];\n    filteredDataAfterCheckboxes.forEach(el => {\n      if (el.fundingTotal >= range[0] && el.fundingTotal <= range[1]) {\n        newData.push(el);\n      }\n    });\n    config.fundingTotal.searchRange = range;\n\n    // шаг 4) обновляем filteredData\n    refreshFilteredData({ filteredData: newData });\n    filteredDataAfterCheckboxes = newData.slice();\n    setFundRange(range);\n\n    // шаг 7) записываем изменения config в filterConfig\n    refreshLS(config);\n  };\n\n  // TODO add to checkbox - None ofthis businesses\n\n  // шаг 3) применяем по очереди фильтры соответсвенно config\n  const filtering = () => {\n    // checkbox with Type of businesses\n    let newData = [];\n    if (![0, BUSINESS_TYPES.length].includes(checkedCategories.length)) {\n      initialData.forEach(el => {\n        const el1 = el.businessTypes.map(category => {\n          return checkedCategories.includes(category);\n        });\n        if (el1.some(element => element === true)) {\n          newData.push(el);\n        }\n      });\n    } else {\n      newData = initialData.slice();\n    }\n    // шаг 4) обновляем filteredData\n\n    filteredDataAfterCheckboxes = newData.slice();\n\n    // input company\n    const searchedCompany1 = config.company.searchValue;\n    handleCompanySearch({ target: { value: searchedCompany1 } });\n\n    // input founder\n    const searchedFounder1 = config.founder.searchValue;\n    handleFoundersSearch({ target: { value: searchedFounder1 } });\n\n    // radio status\n    const searchedStatus = config.status.statusToShow;\n    handleStatusChange({ target: { value: searchedStatus } });\n\n    // years range filter\n    const yearsRange1 = config.foundedYear.searchRange;\n    yearsRangeFilter(yearsRange1);\n\n    // fund range filter\n    const fundRange1 = config.fundingTotal.searchRange;\n    fundRangeFilter(fundRange1);\n\n    // search by all\n    const search = config.searchByAllStr;\n    handleSearch({ target: { value: search } });\n\n    // sorting\n    const { orderBy } = config;\n    const order = config[orderBy].sortDirection;\n    const sortedData = stableSort(filteredDataAfterCheckboxes, getComparator(order, orderBy));\n    refreshFilteredData({ filteredData: sortedData });\n    filteredDataAfterCheckboxes = sortedData.slice();\n    // status toggling\n    const isSelected = config.status.isShowOnlyOperating;\n    if (isSelected) {\n      handleStatusChange({ target: { value: 'operating' } });\n    }\n  };\n\n  const handleYearsRange = (e, newValue) => {\n    yearsRangeFilter(newValue);\n    setYearsRange(newValue);\n  };\n  const handleMinYearChange = ({ target: { value } }) => {\n    if (value <= yearsRange[1]) {\n      const newRange = [Number(value), yearsRange[1]];\n      yearsRangeFilter(newRange);\n      setYearsRange(newRange);\n    }\n  };\n  const handleMaxYearChange = ({ target: { value } }) => {\n    if (value >= yearsRange[0]) {\n      const newRange = [yearsRange[0], Number(value)];\n      yearsRangeFilter(newRange);\n      setYearsRange(newRange);\n    }\n  };\n  const handleYearBlur = () => {\n    if (yearsRange[0] < MIN_YEAR) {\n      const newRange = [MIN_YEAR, yearsRange[1]];\n      yearsRangeFilter(newRange);\n      setYearsRange([MIN_YEAR, yearsRange[1]]);\n    } else if (yearsRange[1] > MAX_YEAR) {\n      const newRange = [yearsRange[0], MAX_YEAR];\n      yearsRangeFilter(newRange);\n      setYearsRange([yearsRange[0], MAX_YEAR]);\n    }\n  };\n\n  const handleFundRange = (e, newValue) => {\n    fundRangeFilter(newValue);\n    setFundRange(newValue);\n  };\n  const handleMinFundChange = ({ target: { value } }) => {\n    if (value <= fundRange[1]) {\n      const newRange = [Number(value), fundRange[1]];\n      fundRangeFilter(newRange);\n      setFundRange(newRange);\n    }\n  };\n  const handleMaxFundChange = ({ target: { value } }) => {\n    if (value >= fundRange[0]) {\n      const newRange = [fundRange[0], Number(value)];\n      fundRangeFilter(newRange);\n      setFundRange(newRange);\n    }\n  };\n  const handleFundBlur = () => {\n    if (fundRange[0] < MIN_INVEST_SUM) {\n      const newRange = [MIN_INVEST_SUM, fundRange[1]];\n      fundRangeFilter(newRange);\n      setFundRange([MIN_INVEST_SUM, fundRange[1]]);\n    } else if (fundRange[1] > MAX_INVEST_SUM) {\n      const newRange = [fundRange[0], MAX_INVEST_SUM];\n      fundRangeFilter(newRange);\n      setFundRange([fundRange[0], MAX_INVEST_SUM]);\n    }\n  };\n\n  // шаг 6) слушаем изменения config\n  useEffect(() => {\n    filtering();\n  }, [checkedCategories, searchedCompany, searchedFounder, status, searchAll, isVirtual]);\n\n  useEffect(() => {\n    setCheckedCategories(checkedCategories1);\n  }, []);\n\n  return (\n    <div className={styles.wrap}>\n      <div className={styles.filters}>\n        <div className={styles.header}>\n          <Typography variant=\"h3\">Filters</Typography>\n          <div className={styles.search}>\n            <div className={styles.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search everywhere\"\n              classes={{\n                root: styles.inputRoot,\n                input: styles.inputHeader,\n              }}\n              inputProps={{ 'aria-label': 'Search everywhere' }}\n              onChange={handleSearch}\n              value={config.searchByAllStr}\n            />\n          </div>\n        </div>\n        <Divider />\n\n        <div className={styles.filter}>\n          <Typography className={styles.title}>Company</Typography>\n          <div className={styles.search}>\n            <div className={styles.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by company name\"\n              classes={{\n                root: styles.inputRoot,\n                input: styles.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'Search by company name' }}\n              onChange={handleCompanySearch}\n              value={config.company.searchValue}\n            />\n          </div>\n        </div>\n\n        <div className={styles.filter}>\n          <Typography className={styles.title}>Founder</Typography>\n          <div className={styles.search}>\n            <div className={styles.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search by company founders\"\n              classes={{\n                root: styles.inputRoot,\n                input: styles.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'Search by company founders' }}\n              onChange={handleFoundersSearch}\n              value={config.founder.searchValue}\n            />\n          </div>\n        </div>\n\n        <div className={styles.filter}>\n          <FormControl component=\"fieldset\" className={styles.formControl}>\n            <FormLabel component=\"legend\" className={styles.title}>\n              Type of business\n            </FormLabel>\n            <FormGroup>\n              {BUSINESS_TYPES.map(category => {\n                return (\n                  <FormControlLabel\n                    key={category}\n                    control={\n                      <Checkbox\n                        checked={categoryMap.get(category)}\n                        onChange={handleCheckboxChange}\n                        value={category}\n                        color=\"default\"\n                        checkedIcon={<span className={clsx(styles.icon, styles.checkedIcon)} />}\n                        icon={<span className={styles.icon} />}\n                        inputProps={{ 'aria-label': category }}\n                      />\n                    }\n                    label={category}\n                  />\n                );\n              })}\n            </FormGroup>\n          </FormControl>\n        </div>\n\n        <div className={styles.filter}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\" className={styles.title}>\n              Status of company\n            </FormLabel>\n            <RadioGroup\n              aria-label=\"Status of compan\"\n              name=\"Status of compan\"\n              onChange={handleStatusChange}\n              value={status}\n            >\n              {labels.map(label => (\n                <FormControlLabel\n                  key={label}\n                  control={<StyledRadio />}\n                  value={label}\n                  label={label}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n        </div>\n\n        <div className={styles.filter}>\n          <Typography className={styles.title}>Year of foundation range</Typography>\n          <Slider\n            min={MIN_YEAR}\n            max={MAX_YEAR}\n            step={1}\n            value={yearsRange}\n            onChange={handleYearsRange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"Year of foundation range\"\n            className={styles.range}\n          />\n          <div className={styles.inputs}>\n            <Input\n              className={styles.input}\n              value={yearsRange[0]}\n              onChange={handleMinYearChange}\n              onBlur={handleYearBlur}\n              inputProps={{\n                step: 1,\n                min: MIN_YEAR,\n                max: MAX_YEAR,\n                type: 'number',\n                'aria-labelledby': 'minimum value in years range of company released',\n              }}\n            />\n            <Input\n              className={styles.input}\n              value={yearsRange[1]}\n              onChange={handleMaxYearChange}\n              onBlur={handleYearBlur}\n              inputProps={{\n                step: 1,\n                min: MIN_YEAR,\n                max: MAX_YEAR,\n                type: 'number',\n                'aria-labelledby': 'maximum value in years range of company released',\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.filter}>\n        <Typography className={styles.title}>\n          Funding total, USD &#215; 10<sup>3</sup>\n        </Typography>\n        <Slider\n          min={MIN_INVEST_SUM}\n          max={MAX_INVEST_SUM}\n          step={5}\n          value={fundRange}\n          onChange={handleFundRange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"Year of foundation range\"\n          className={styles.range}\n        />\n        <div className={styles.inputs}>\n          <Input\n            className={styles.input}\n            value={fundRange[0]}\n            onChange={handleMinFundChange}\n            onBlur={handleFundBlur}\n            inputProps={{\n              step: 5,\n              min: MIN_INVEST_SUM,\n              max: MAX_INVEST_SUM,\n              type: 'number',\n              'aria-labelledby': 'minimum value of company funding',\n            }}\n          />\n          <Input\n            className={styles.input}\n            value={fundRange[1]}\n            onChange={handleMaxFundChange}\n            onBlur={handleFundBlur}\n            inputProps={{\n              step: 5,\n              min: MIN_INVEST_SUM,\n              max: MAX_INVEST_SUM,\n              type: 'number',\n              'aria-labelledby': 'maximum value of company funding',\n            }}\n          />\n        </div>\n      </div>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={styles.defaultSettings}\n        onClick={handleResetFilter}\n      >\n        Reset filters\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ initialData, filteredData, isVirtual }) => ({\n  initialData,\n  filteredData,\n  isVirtual,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshData: data => dispatch(refreshData(data)),\n    refreshFilteredData: data => dispatch(refreshFilteredData(data)),\n  };\n};\n\n// TODO стилизовать фильтр как навбар при разрешении менее 600, чтоб выдвигался сбоку из гамбургера элемент Drawer из  material\nconst FiltersWithoutRouter = connect(mapStateToProps, mapDispatchToProps)(ConnectedFilters);\nconst Filters = withRouter(FiltersWithoutRouter);\nexport default Filters;\n","/* eslint-disable no-shadow */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n// import queryString from 'query-string';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport theme from '../themes/themeLight';\nimport DataGrid from './table/datagrid';\nimport Filters from './filters/filters';\nimport { SORT_CONFIG, DATAGRID_SORT_CONFIG } from '../constantas/settings';\n\nconst useStyles = makeStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n    justifyContent: 'center',\n    padding: 20,\n  },\n});\n\nconst App = () => {\n  const styles = useStyles();\n  let sortConfig;\n  const sortConfigJSON = localStorage.getItem(DATAGRID_SORT_CONFIG);\n  try {\n    sortConfig = { ...(sortConfigJSON === null ? SORT_CONFIG : JSON.parse(sortConfigJSON)) };\n  } catch (e) {\n    localStorage.removeItem(DATAGRID_SORT_CONFIG);\n    sortConfig = { ...SORT_CONFIG };\n  }\n  localStorage.removeItem(DATAGRID_SORT_CONFIG);\n  localStorage.setItem(DATAGRID_SORT_CONFIG, JSON.stringify(sortConfig));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={styles.container}>\n        <Filters />\n        <DataGrid />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\n// TODO обнови Readme\n// TODO удлаить папку table и заново table => конфликт с Table\n// TODO удали из еслинта про консоль лог и удали их из кода\n// TODO По наведению на геолокацию выводится всплывающее окошко с картой, на которой отмечена меткой расположение фирмы\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport history from './history';\nimport store from './store';\n// TODO query-string\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}